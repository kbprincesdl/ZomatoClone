[{"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\index.js":"1","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\reportWebVitals.js":"2","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Router.js":"3","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Home.js":"4","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Details.js":"5","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Filter.js":"6","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\QuickSearch.js":"7","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Wallpaper.js":"8","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\QuickSearchItem.js":"9","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Header.js":"10","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Filter3.js":"11","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Details2.js":"12","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Pay.js":"13","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\MyOrders.js":"14"},{"size":175,"mtime":1608120700714,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":982,"mtime":1610975539369,"results":"18","hashOfConfig":"16"},{"size":1701,"mtime":1610193384750,"results":"19","hashOfConfig":"16"},{"size":18416,"mtime":1610770542461,"results":"20","hashOfConfig":"16"},{"size":20666,"mtime":1610789640917,"results":"21","hashOfConfig":"16"},{"size":1360,"mtime":1610365146601,"results":"22","hashOfConfig":"16"},{"size":5119,"mtime":1610722085946,"results":"23","hashOfConfig":"16"},{"size":2672,"mtime":1610452710050,"results":"24","hashOfConfig":"16"},{"size":8949,"mtime":1610978520274,"results":"25","hashOfConfig":"16"},{"size":22855,"mtime":1610520785508,"results":"26","hashOfConfig":"16"},{"size":15364,"mtime":1610538958021,"results":"27","hashOfConfig":"16"},{"size":3848,"mtime":1610706409730,"results":"28","hashOfConfig":"16"},{"size":2980,"mtime":1610984420099,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1401fyq",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\index.js",[],["65","66"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\reportWebVitals.js",[],["67","68"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Router.js",["69"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Home.js",[],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Details.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87"],"import React from 'react';\r\nimport '../Styles/details.css';\r\n\r\nimport querystring from 'query-string';\r\nimport axios from 'axios';\r\n\r\nimport detailsImg from '../images/details.png';\r\nimport Modal from 'react-modal';\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\nimport Pay from '../Components/Pay';\r\n \r\n// const customStyles = {\r\n//     content : {\r\n//       top                   : '50%',\r\n//       left                  : '50%',\r\n//       right                 : 'auto',\r\n//       bottom                : 'auto',\r\n//       marginRight           : '-50%',\r\n//       transform             : 'translate(-50%, -50%)'\r\n//     }\r\n//   };\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        padding: '2px',\r\n        backgroundColor: 'white',\r\n        border: 'solid 2px brown',\r\n        zIndex: '150'\r\n    }\r\n };\r\nclass Details extends React.Component{\r\n\r\n   constructor(){\r\n      super();\r\n      this.state={\r\n        restaurant: {},\r\n        itemModalIsOpen: false,\r\n        formModalIsOpen: false,\r\n        galleryModalIsOpen: false,\r\n        restaurantId: '',\r\n        items: [],\r\n        subTotal: 0,\r\n        name: '',\r\n        email:'',\r\n        phone:'',\r\n        amount:'',\r\n        contactNumber: '',\r\n        address: ''\r\n        //  restaurant:[],\r\n      \r\n        //  restaurantId:undefined,\r\n    \r\n        //  items:[],\r\n        //  subTotal:0,\r\n        //  itemsRest:[],\r\n        //  ItemsList:[],\r\n        //  Name: '',\r\n        // Mobile: '',\r\n        // Address: '',\r\n        // orderModalIsOpen:false,\r\n        // itemModalIsOpen:false,\r\n        // formModalIsOpen: false,\r\n        // galleryModalIsOpen: false,\r\n        // location_id:undefined\r\n   \r\n      }\r\n      \r\n   }\r\n   componentDidMount(){\r\n    \r\n      const queryParams=querystring.parse(this.props.location.search);\r\n      const restaurantId=queryParams.restaurantId;\r\n      console.log(`query params ${this.props.location.search}`);\r\n      //api call\r\n            axios({\r\n               method : 'GET',\r\n               url:`http://localhost:8901/getResById/${restaurantId}`,\r\n               headers:{'Content-Type':'application/json'}})\r\n               .then(response =>{\r\n                   this.setState({restaurant :response.data.restaurant,restaurantId:restaurantId })\r\n           }).catch(error=>{\r\n               return console.log(error)\r\n           })\r\n            console.log(`details restarutant :${this.restaurant}`);\r\n\r\n   }\r\n\r\n   makeOrder = () => {\r\n    const { restaurantId } = this.state;\r\n   // console.log(restaurantId);\r\n    axios({\r\n        method: 'GET',\r\n        url: `http://localhost:8901/getRestaurantItemsById/${restaurantId}`,\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }).then(res => this.setState({ items: res.data.ItemsList, orderModalIsOpen: true }))\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\n   handleOrder=()=>{\r\n      const {restaurantId}=this.state;\r\n      axios({\r\n         method : 'GET',\r\n         url:`http://localhost:8901/getRestaurantItemsById/${restaurantId}`,\r\n         headers:{'Content-Type':'application/json'}\r\n   }).then(response =>{\r\n            this.setState({items :response.data.ItemsList,itemModalIsOpen: true })\r\n   }).catch(error=>console.log(error));\r\n\r\n    console.log(this.ItemsList);\r\n      \r\n   }\r\n   handlefooditemclose = () => {\r\n    this.setState({ orderModalIsOpen: false })\r\n}\r\n\r\nopenDetailsWindow = () => {\r\n    this.setState({ detailModelsOpen: true, orderModalIsOpen: false })\r\n}\r\n\r\n\r\n   addItems = (index, operationType) => {\r\n      let total = 0;\r\n      const items = [...this.state.items]; //mutating the array creating a  copy of array\r\n      const item = items[index];\r\n\r\n      if (operationType == 'add') {\r\n          item.qty = item.qty + 1;\r\n      }\r\n      else {\r\n          item.qty = item.qty - 1;\r\n      }\r\n      items[index] = item;\r\n      items.map((item) => {\r\n          total += item.qty * item.price;\r\n      })\r\n      this.setState({ items: items, subTotal: total });\r\n  }\r\n\r\n  handlePay = () => {\r\n      this.setState({ itemModalIsOpen: false, formModalIsOpen: true })\r\n  }\r\n\r\n  handleModalClose = (state) => {\r\n      this.setState({ [state]: false });  //[state] here is dynamic variable\r\n  }\r\n\r\n  handleChange = (event, state) => {\r\n      this.setState({ [state]: event.target.value });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n      const { name, contactNumber, address } = this.state;\r\n      if (name && contactNumber && address) {\r\n          const obj = {\r\n              name: name,\r\n              contactNumber: contactNumber,\r\n              address: address\r\n          };\r\n          // Payment API Call\r\n        // this.makepayment(obj);\r\n      }\r\n      else {\r\n          alert('All are mandatory feilds, plz fill them');\r\n      }\r\n     event.preventDefault();  //default nature of html to post \r\n     \r\n  }\r\n\r\n  handleGallery = () => {\r\n      this.setState({ galleryModalIsOpen: true });\r\n  }\r\n//   handleClose = () => {\r\n//     // setState to close the modal\r\n//     this.setState({ loginModalIsOpen: false });\r\n// }\r\n\r\n\r\nisDate(val) {\r\n    // Cross realm comptatible\r\n    return Object.prototype.toString.call(val) === '[object Date]'\r\n}\r\n\r\nisObj = (val) => {\r\n    //return typeof val === 'object'\r\n    return Object.prototype.toString.call(val) === '[object Date]'\r\n}\r\n\r\nstringifyValue = (val) => {\r\n    if (this.isObj(val) && !this.isDate(val)) {\r\n        return JSON.stringify(val)\r\n    } else {\r\n        return val\r\n    }\r\n}\r\n\r\nbuildForm = ({ action, params }) => {\r\n    \r\n    const form = document.createElement('form')\r\n    //const action=\"submit\"\r\n    form.setAttribute('method', 'post')\r\n    form.setAttribute('action', action)\r\n\r\n    Object.keys(params).forEach(key => {\r\n        const input = document.createElement('input')\r\n        input.setAttribute('type', 'hidden')\r\n        input.setAttribute('name', 'f1')\r\n        input.setAttribute('value', this.stringifyValue(params[key]))\r\n        form.appendChild(input)\r\n    })\r\n\r\n    return form\r\n}\r\n\r\n  post=(details)=>{\r\n      const form=this.buildForm(details)\r\n      document.body.appendChild(form)\r\n      form.submit()\r\n      form.remove()\r\n  }\r\n  getData=(data)=>{\r\n    return fetch(`http://localhost:4000/paynow`,{\r\n        method:\"POST\",  \r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(response => response.json()).catch(err => console.log(err))\r\n}\r\n\r\nmakepayment = (e) => {\r\n    const { subTotal } = this.state;\r\n    this.getData({ amount: \"100.00\", email: \"abc@gmail.com\" }).then(response => {\r\n        var information = {\r\n            action: \"https://securegw-stage.paytm.in/theia/processTransaction\",\r\n            params: response\r\n        }\r\n        this.post(information);\r\n    })\r\n    e.preventDefault();\r\n}\r\n\r\n\r\nmakePaytmCall=()=>{\r\n    // this.props.history.push(`http://localhost:4000`);\r\n    //const {restaurantId}=this.state;\r\n    axios({\r\n       method : 'POST',\r\n       url:`http://localhost:4000/paynow`,\r\n       headers:{'Content-Type':'text/html' }\r\n }).then(response =>{\r\n          console.log(response);\r\n }).catch(error=>console.log(error));\r\n// fetch(\"http://localhost:4000/\")\r\n// .then(res=>{\r\n//     console.log(res);\r\n// }).catch(error=>console.log(error))\r\nthis.setState({ formModalIsOpen: false });\r\n//e.preventDefault(); \r\n }\r\n\r\n handlefooditemclose = () => {\r\n  this.setState({ orderModalIsOpen: false })\r\n}\r\n\r\n  \r\n  render() {\r\n    const { restaurant, itemModalIsOpen, items,subTotal,formModalIsOpen, name,phone,email,amount,address, contactNumber,galleryModalIsOpen} = this.state;\r\n    // console.log(restaurant);   \r\n    // console.log(`items -${items}`);\r\n    return (\r\n        <div>\r\n { restaurant != null ?\r\n    <React.Fragment>\r\n       \r\n                    <div className=\"container-fluid\">\r\n                    <div className=\"row pl-1\">\r\n                    \r\n                    <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                        <img className=\"detailsImg\" src={restaurant.thumb} alt=\"No Image, currently\" />  \r\n                        {/* <Pay /> */}\r\n                   \r\n                    </div>\r\n                    </div>\r\n                   \r\n                        {/* Showcasing the First Image and rest will be showed in the Carousal  */}\r\n                        <button className=\"gallery-button\" onClick={this.handleGallery}>Click to see Image Gallery</button>\r\n                    </div>\r\n                    <button className=\"btn btn-danger\" style={{ float: 'right', margin: '25px' }} onClick={this.handleOrder} >Place Online Order</button>\r\n                    {/* Showing 2 Tabs on screen as Overview and Contact with details in respective sections*/}\r\n                    <div className=\"heading\">{restaurant.name}</div>\r\n                    \r\n                    <div>\r\n\r\n                  \r\n                    <Tabs>\r\n                        <TabList>\r\n                            <Tab>Overview</Tab>\r\n                            <Tab>Contact</Tab>\r\n                        </TabList>\r\n\r\n                        <TabPanel>\r\n                            <h2>About the place</h2>\r\n                            <div>\r\n                                <div className=\"about\">About the place</div>\r\n                                <div className=\"head\">Cuisine</div>\r\n                                <div className=\"value\">{restaurant.cuisine ? restaurant.cuisine.map((item) => item.name + ' ,') : null}</div>\r\n                                <div className=\"head\">Average Cost</div>\r\n                                <div className=\"value\">&#8377; {restaurant.min_price} for two people(approx)</div>                               \r\n                            </div>\r\n                       \r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            <h2>Contact Details</h2>\r\n                            <div className=\"head\">Phone Number</div>\r\n                                <div className=\"value\">{restaurant.contact_number}</div>\r\n                                <div className=\"head\">{restaurant.name}</div>\r\n                                <div className=\"value\">{`${restaurant.locality}, ${restaurant.city}`}</div>\r\n                        </TabPanel>\r\n                    </Tabs>\r\n                    </div>\r\n\r\n                                        {/* Modal within which we will show the carousal of Images*/}\r\n                  \r\n                    <div>\r\n                    <Modal\r\n                        isOpen={itemModalIsOpen}\r\n                        style={customStyles}>\r\n\r\n                        <div >\r\n                            <div>\r\n                            <p >\r\n                                <a href=\"#\" onClick={() => this.handleModalClose('itemModalIsOpen')}>  \r\n                                <span class=\"glyphicon glyphicon-remove-sign\" style={{float: 'right'}}></span>\r\n                                </a>\r\n                            </p>\r\n                            </div>\r\n                            <h3 className=\"restaurant-name\">{restaurant.name}</h3>   \r\n                            <h3>SubTotal : {subTotal}</h3>\r\n                            <button className=\"btn btn-danger\" onClick={this.handlePay}> Pay Now</button>   \r\n                            {items.map((item, index) => {\r\n                                return <div style={{ width: '44rem', marginTop: '10px', marginBottom: '10px', borderBottom: '2px solid #dbd8d8' }}>\r\n                                    <div className=\"card\" style={{ width: '43rem', margin: 'auto' }}>\r\n                                        <div className=\"row\" style={{ paddingLeft: '10px', paddingBottom: '10px' }}>\r\n                                            <div className=\"col-xs-9 col-sm-9 col-md-9 col-lg-9 \" style={{ paddingLeft: '10px', paddingBottom: '10px' }}>\r\n                                                <span className=\"card-body\">\r\n                                                    <h5 className=\"item-name\">{item.name}</h5>\r\n                                                    <h5 className=\"item-name\">&#8377;{item.price}</h5>\r\n                                                    <p className=\"card-text\">{item.description}</p>\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\"> \r\n                                            <img className=\"imgdetails\" src={detailsImg} alt=\"designs\" />\r\n                                            {item.qty == 0 ? <div><button className=\"add-button\" onClick={() => this.addItems(index, 'add')}>Add</button></div> :\r\n                                                <div className=\"add-number\"><button onClick={() => this.addItems(index, 'subtract')}>-</button><span style={{ backgroundColor: 'white' }}>{item.qty}</span><button onClick={() => this.addItems(index, 'add')}>+</button></div>}\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n                            <div className=\"card\" style={{ width: '44rem', marginTop: '10px', marginBottom: '10px', margin: 'auto' }}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4 subtotal\" style={{ paddingLeft: '26px' }}>Subtotal</div>\r\n                                    <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4 subtotal\">&#8377; {subTotal}</div>\r\n                                   \r\n                                    \r\n                                    </div>\r\n                                </div>\r\n                           \r\n                        </div>\r\n</Modal>\r\n<Modal\r\n                        isOpen={formModalIsOpen}\r\n                        style={customStyles}>\r\n\r\n                        <div>\r\n                        <div  onClick={() => this.handleModalClose('formModalIsOpen')}></div>\r\n                        {/* <form>  */}\r\n                        <form className=\"\" action=\"http://localhost:4000/paynow\" method=\"post\">\r\n                        {/* <form onClick={this.handleSubmit}>  */}\r\n                        \r\n                            <table className=\"table table-border table-striped table-hover\">\r\n                                <tr>\r\n                                    <td>\r\n                                        <label>Name : </label>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"text\" className=\"form-control\"  name=\"name\" onChange={(event) => this.handleChange(event, 'name')} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <label>Mobile No : </label>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"text\" className=\"form-control\"  name=\"phone\" onChange={(event) => this.handleChange(event, 'phone')} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <label>Email : </label>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"text\" className=\"form-control\"  name=\"email\" onChange={(event) => this.handleChange(event, 'email')} />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <label>Amount : </label>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"text\" className=\"form-control\"  name=\"amount\" value={subTotal} onChange={(event) => this.handleChange(event, 'amount')} />\r\n                                    </td>\r\n                                </tr>\r\n                                \r\n                            </table>\r\n                            <input type=\"submit\" className=\"btn btn-danger\"  value=\"Proceed\" />\r\n                            </form>\r\n                        </div>\r\n</Modal>\r\n<Modal\r\n                    isOpen={galleryModalIsOpen}\r\n                    style={customStyles}\r\n                >\r\n                    <div className=\"glyphicon glyphicon-remove lose\" style={{ float: 'right' }} onClick={() => this.handleModalClose('galleryModalIsOpen')}></div>\r\n                    <Carousel\r\n                        showIndicators={false}\r\n                        showThumbs={false}\r\n                    >\r\n\r\n                <div>\r\n                    <img src=\"../images/breakfast.png\" />\r\n                   \r\n                </div>\r\n                <div>\r\n                    <img src=\"../images/dinner.png\" />\r\n                    \r\n                </div>\r\n                <div>\r\n                    <img src={detailsImg} />\r\n                   \r\n                </div>\r\n                <div>\r\n                    <img src={restaurant.thumb} />\r\n                   \r\n                </div>\r\n                         {/* {this.restaurant ? this.restaurant.thumb && this.restaurant.thumb.map((item) => {\r\n                            return <div>\r\n                                <img src={`${item.thumb}`} />\r\n                            </div>\r\n                        }) : null}  */}\r\n                    </Carousel>\r\n</Modal> \r\n</div>\r\n                    \r\n                </React.Fragment> : null\r\n            }\r\n            </div>\r\n    )\r\n}}\r\n\r\nexport default Details;\r\n\r\n\r\n               \r\n           ","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Filter.js",["88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"import React from 'react';             // Importing React to create a component\r\nimport '../Styles/search.css';         // Importing css file for external styles\r\nimport axios from 'axios';             // Importing axios to make API Calls within the component\r\nimport queryString from 'query-string';// Importing query-string package to parse the values from URL's query string \r\n\r\nclass Filter extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            restaurants: [],\r\n            locations:[],\r\n            location_id: undefined,\r\n            mealtype_id: undefined, //initially mealType:undefined\r\n            cusine_id: undefined,\r\n            lcost: undefined,\r\n            hcost: undefined,\r\n            area:undefined,\r\n            page: 1,\r\n            sort: 1, //defulau sortin g 1 ascending\r\n            restaurants: [],\r\n            locationList: [],\r\n            pageCount: [],\r\n            location: undefined,\r\n            cuisine: [],\r\n            mealtype: undefined\r\n           \r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n       // sessionStorage.clear();\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.location.search); //to capture valuyes from  url we use this\r\n        const queryParams = queryString.parse(this.props.location.search);\r\n        const mealtype_id = queryParams.mealtype;\r\n        const location_id = queryParams.city;\r\n        const cuisine_id = queryParams.cuisine;\r\n        const hcost=queryParams.costlessthan;\r\n        const lcost=queryParams.costmorethan;\r\n        const page = queryParams.page;\r\n        const sort = queryParams.sort;\r\n\r\n        // const locationid =queryParams.locationid;\r\n        // const mealTypeId=queryParams.MealTypeId\r\n        // const cusineId = queryParams.cusineId;\r\n        // const lCost = queryParams.lCost;\r\n        // const hCost = queryParams.hCost;\r\n        \r\n        //filter api call\r\n\r\n      const filterObj = {\r\n            location_id: location_id,\r\n            mealtype_id: mealtype_id,\r\n            cuisine_id : cuisine_id ,\r\n            \r\n            lCost: lcost,\r\n            hCost: hcost,\r\n            page: page,\r\n            sort: sort\r\n\r\n        };\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({\r\n                restaurants: response.data.restaurant,\r\n                pageCount: response.data.pageCount,\r\n                mealtype: mealtype_id,\r\n                location: location_id\r\n            }))\r\n            .catch(err => console.log(err))\r\n\r\n            axios({\r\n                method : 'GET',\r\n                url:'http://localhost:8901/location',\r\n                headers:{'Content-Type':'application/json'}\r\n            \r\n            }).then(response =>{\r\n                    this.setState({locationList: response.data.cities })\r\n            }).catch(error=>{\r\n                return console.log(error);\r\n            })\r\n\r\n\r\n        // Making location API Call to bind the values in location dropdown\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/api/cityList',\r\n    //         headers: { 'Content-Type': 'application/json' }\r\n    //     }).then(response => this.setState({ locationList: response.data.city }))\r\n    //         .catch(err => console.log(err))\r\n    // }\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ \r\n    //             restaurants: response.data.restaurant,\r\n    //             pageCount: response.data.pageCount,\r\n    //             location_id: location_id, \r\n    //             mealtype_id: mealtype_id})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n\r\n    //     axios({\r\n    //         method : 'GET',\r\n    //         url:'http://localhost:8901/location',\r\n    //         headers:{'Content-Type':'application/json'}\r\n        \r\n    //     }).then(response =>{\r\n    //             this.setState({locations :response.data.cities })\r\n    //     }).catch(error=>{\r\n    //         return console.log(error);\r\n    //     })\r\n    }\r\n\r\n    handleClick = (itemId) => {\r\n        this.props.history.push(`/details/?restaurantId=${itemId}`);\r\n\r\n    }\r\n\r\n    handleLocationChange = (event) => {\r\n        /* This function will be invoked on location value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const area = event.target.value.split('-')[0];\r\n        const city = event.target.value.split('-')[1];\r\n        const { location,cuisine, mealtype, hcost, lcost, page, sort } = this.state;\r\n\r\n        // making the input object for filter API basis changed location\r\n        const filterObj = {\r\n            location_id: area,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurants: response.data.restaurant, pageCount: response.data.pageCount, location: area }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        /* This function will be invoked on pagination value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const page = pageNumber;\r\n        const { location, cuisine, mealtype, hcost, lcost, sort } = this.state;\r\n\r\n        // making the input object for filter API basis changed pagination\r\n        const filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurants: response.data.restaurant, pageCount: response.data.pageCount, page: page }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleCuisineChange = (cuisineId) => {\r\n        /* This function will be invoked on cuisine value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n        const { location, cuisine, mealtype, hcost, lcost, sort, page} = this.state;\r\n    \r\n        // pushing and poping the cuisines values from array\r\n        if (cuisine.indexOf(cuisineId) == -1) {\r\n            cuisine.push(cuisineId);\r\n        }\r\n        else {\r\n            var index = cuisine.indexOf(cuisineId);\r\n            cuisine.splice(index, 1);\r\n        }\r\n\r\n        // making the input object for filter API basis changed cuisine\r\n        const filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurants: response.data.restaurant, pageCount: response.data.pageCount, cuisine: cuisine }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleSortChange = (sort) => {\r\n        /* This function will be invoked on sort radio button value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const { location, cuisine, mealtype, hcost, lcost, page } = this.state;\r\n\r\n        // making the input object for filter API basis changed sort option\r\n        const filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurants: response.data.restaurant, sort: Number(sort), pageCount: response.data.pageCount }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleCostChange = (lcost, hcost) => {\r\n        /* This function will be invoked on cost filter value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const { location, cuisine, mealtype, sort, page } = this.state;\r\n\r\n        // making the input object for filter API basis changed cost\r\n        const filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({\r\n                restaurants: response.data.restaurant,\r\n                lcost: Number(lcost),\r\n                hcost: Number(hcost),\r\n                pageCount: response.data.pageCount\r\n            }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        const { restaurants, locationList, pageCount, sort ,image,location} = this.state;\r\n        console.log(`restaurantlist ${restaurants}`);\r\n        return (\r\n            <div>\r\n                <div id=\"myId\" className=\"heading-filter\">Breakfast Places to look for food</div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3 col-md-3 col-lg-3\">\r\n                            <div className=\"filter-options\">\r\n                                <span className=\"glyphicon glyphicon-th-list toggle-span\" data-toggle=\"collapse\"\r\n                                    data-target=\"#demo\"></span>\r\n                                <div id=\"demo\" className=\"collapse show\">\r\n                                    <div className=\"filter-heading\">Filters</div>\r\n                                    <div className=\"Select-Location\">Select Location</div>\r\n                                    <select className=\"Rectangle-2236\" onChange={this.handleLocationChange}>\r\n                                        <option>Select</option>\r\n                                        {locationList.map((item) => {\r\n                                            return <option value={`${item.location_id}-${item.city_id}`}>{`${item.name}`}</option>\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"\">Cuisine</div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" value=\"1\" onChange={() => this.handleCuisineChange(1)} />\r\n                                        <span className=\"checkbox-items\">North Indian</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(2)} />\r\n                                        <span className=\"checkbox-items\">South Indian</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(3)} />\r\n                                        <span className=\"checkbox-items\">Chineese</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(4)} />\r\n                                        <span className=\"checkbox-items\">Fast Food</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(5)} />\r\n                                        <span className=\"checkbox-items\">Street Food</span>\r\n                                    </div>\r\n                                    <div className=\"\">Cost For Two</div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 500)} />\r\n                                        <span className=\"checkbox-items\">Less than &#8377; 500</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(500, 1000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 500 to &#8377; 1000</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1000, 1500)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 1000 to &#8377; 1500</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1500, 2000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 1500 to &#8377; 2000</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(2000, 10000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 2000 +</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 10000)} />\r\n                                        <span className=\"checkbox-items\">All</span>\r\n                                    </div>\r\n                                    <div className=\"\">Sort</div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"sort\" checked={sort == 1} onChange={() => this.handleSortChange(1)} />\r\n                                        <span className=\"checkbox-items\">Price low to high</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"sort\" checked={sort == -1} onChange={() => this.handleSortChange(-1)} />\r\n                                        <span className=\"checkbox-items\">Price high to low</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"col-sm-9 col-md-9 col-lg-9  details-section scroll\">\r\n                                {restaurants.length > 0 ? restaurants.map((item) => {\r\n                                    return <div className=\"Item\" onClick={() => this.handleClick(item._id)}>\r\n                                        <div className=\"row pl-1\">\r\n                                            <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                                                {/* <img className=\"img2\" src='/images/breakfast.png' alt=\"design\" height=\"150\" width=\"140\"/>  */}\r\n                                                <img className=\"img2\" src={item.thumb} alt=\"design\" height=\"150\" width=\"140\"/> \r\n                                            </div>\r\n                                            <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n                                                <div className=\"rest-name\">{item.name}</div>\r\n                                                <div className=\"res-location\">{item.locality}</div>\r\n                                                <div className=\"rest-address\">{item.address}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row padding-left\">\r\n                                            <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                                                <div className=\"rest-address\">CUISINES : {item.Cuisine.map((item) => item.name + ' ')}</div>\r\n                                                <div className=\"rest-address\">COST FOR TWO : {item.min_price} </div> \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }) : <div className=\"noData\"> No Data Found</div>}\r\n                            </div>\r\n                            <div>\r\n                                \r\n                            </div>\r\n                           <div>\r\n                           {/* {pageCount.length >= 1 && <div className=\"pagination\">\r\n                                <a href=\"#\">&laquo;</a>\r\n                                {pageCount.map((item) => {\r\n                                    return < a href=\"#\">{item}</a>\r\n                                })}\r\n                                <a href=\"#\">&raquo;</a>\r\n                            </div>} */}\r\n\r\n                            {restaurants.length == 0 ? null :\r\n                                <div className=\"pagination\">\r\n                                    <a >&laquo;</a>\r\n                                    {pageCount.map((item) => {\r\n                                        return <a onClick={() => this.handlePageChange(item)}>{item}</a>\r\n                                    })}\r\n                                    <a>&raquo;</a>\r\n                                </div>}\r\n                           </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter;","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\QuickSearch.js",[],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Wallpaper.js",[],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\QuickSearchItem.js",["104"],"import React from 'react';\r\nimport '../Styles/QuickSearch.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// import breakfast from '../images/breakfast.jpg';\r\n\r\n// import dinner from '../images/dinner.png';\r\n// import drinks from '../images/drinks.png';\r\n// import lunch from '../images/lunch.jpg';\r\n// import snacks from '../images/snacks.png';\r\n// import food from '../images/food.jpg';\r\n\r\nclass QuickSearchItem extends React.Component {\r\n    handleClick = (id) => {\r\n        //const locationID=11;\r\n        const locationID = sessionStorage.getItem('LocationID');\r\n        //const  CityName=sessionStorage.getItem('CityName');\r\n        const mealtype = id;\r\n        const city = sessionStorage.getItem('city');\r\n        const area = sessionStorage.getItem('area');\r\n       \r\n        if (area) {\r\n            //this.props.history.push(`/filter/?mealtype=${id}&area=${locationID}`);\r\n            this.props.history.push(`/filter/?mealtype=${mealtype}&area=${area}&city=${city}`);\r\n\r\n        }\r\n        else {\r\n            this.props.history.push(`/filter/?mealtype=${id}`);\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const { id, name, content, image } = this.props;\r\n        return (\r\n\r\n        //    <div className=\"\">\r\n        //     <div className=\"row\">\r\n         \r\n        //     <div className=\"col-sm-4 col-md-4 col-lg-4\" onClick={() => this.handleClick(id)}>\r\n        //         <div className=\"main-block\">\r\n        //             <div className=\"left-block\">\r\n        //                 <img className=\"img2\" src={'../images/' + image} alt=\"design\" height=\"150\" width=\"140\" />\r\n        //             </div>\r\n        //             <div className=\"right-block\">\r\n        //                 <div className=\"Start-with-exclusive-options\">{name}</div>\r\n        //                 <div className=\"Right-Subheading\">{content}</div>\r\n        //             </div>  \r\n        //         </div>\r\n        //     </div>\r\n       \r\n        //     </div>\r\n        //     </div>\r\n            <div className=\"col-sm-12 col-md-3 col-lg-4\" onClick={() => this.handleClick(id)}>\r\n                <div className=\"main-block\">             \r\n                   <div className=\"left-block\">\r\n                        <img className=\"img2\" src={image}  alt=\"design\" height=\"150\" width=\"140\"/> \r\n                    </div>\r\n                   <div className=\"right-block\">\r\n                        <div className=\"Start-with-exclusive-options\">{name}</div>     \r\n                        <div className=\"Right-Subheading\">{content}</div>\r\n                   </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default withRouter(QuickSearchItem);","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Header.js",["105"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Filter3.js",["106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"import React from 'react';\r\n//import '../Styles/filter.css';\r\nimport Img1 from '../images/img1.png';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport '../Styles/search.css';         // Importing css file for external styles\r\n\r\n\r\n\r\n// import { withRouter } from 'react-router-dom';\r\nclass Filter3 extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            restaurants: [],\r\n            locations:[],\r\n            location_id: undefined,\r\n            mealtype_id: undefined, //initially mealType:undefined\r\n            cusine_id: undefined,\r\n            lcost: undefined,\r\n            hcost: undefined,\r\n            area:undefined,\r\n            page: 1,\r\n            sort: 1, //defulau sortin g 1 ascending\r\n            restaurantList: [],\r\n            locationList: [],\r\n            pageCount: [],\r\n            location: undefined,\r\n            cuisine: [],\r\n            mealtype: undefined\r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        sessionStorage.clear();\r\n    }\r\n    componentDidMount() {\r\n         //console.log(this.props.location.search); //to capture valuyes from  url we use this\r\n        const queryParams = queryString.parse(this.props.location.search);\r\n        const mealtype_id = queryParams.mealtype;\r\n        const location_id = queryParams.city;\r\n        const cuisine_id = queryParams.cuisine;\r\n        const hcost=queryParams.costlessthan;\r\n        const lcost=queryParams.costmorethan;\r\n        const page = queryParams.page;\r\n        const sort = queryParams.sort;\r\n\r\n        // const locationid =queryParams.locationid;\r\n        // const mealTypeId=queryParams.MealTypeId\r\n        // const cusineId = queryParams.cusineId;\r\n        // const lCost = queryParams.lCost;\r\n        // const hCost = queryParams.hCost;\r\n        \r\n        //filter api call\r\n\r\n      let filterObj = {\r\n            location_id: location_id,\r\n            mealtype_id: mealtype_id,\r\n            cuisine_id : cuisine_id ,\r\n            \r\n            lCost: lcost,\r\n            hCost: hcost,\r\n            page: page,\r\n            sort: sort\r\n\r\n        };\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({\r\n                restaurantList: response.data.restaurant,\r\n                pageCount: response.data.pageCount,\r\n                mealtype: mealtype_id,\r\n                location: location_id\r\n            }))\r\n            .catch(err => console.log(err))\r\n\r\n            axios({\r\n                method : 'GET',\r\n                url:'http://localhost:8901/location',\r\n                headers:{'Content-Type':'application/json'}\r\n            \r\n            }).then(response =>{\r\n                    this.setState({locationList: response.data.cities })\r\n            }).catch(error=>{\r\n                return console.log(error);\r\n            })\r\n\r\n\r\n        // Making location API Call to bind the values in location dropdown\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/api/cityList',\r\n    //         headers: { 'Content-Type': 'application/json' }\r\n    //     }).then(response => this.setState({ locationList: response.data.city }))\r\n    //         .catch(err => console.log(err))\r\n    // }\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ \r\n    //             restaurants: response.data.restaurant,\r\n    //             pageCount: response.data.pageCount,\r\n    //             location_id: location_id, \r\n    //             mealtype_id: mealtype_id})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n\r\n    //     axios({\r\n    //         method : 'GET',\r\n    //         url:'http://localhost:8901/location',\r\n    //         headers:{'Content-Type':'application/json'}\r\n        \r\n    //     }).then(response =>{\r\n    //             this.setState({locations :response.data.cities })\r\n    //     }).catch(error=>{\r\n    //         return console.log(error);\r\n    //     })\r\n    }\r\n\r\n    handleClick = (itemId) => {\r\n        this.props.history.push(`/details/?restaurantId=${itemId}`);\r\n\r\n    }\r\n\r\n    handleLocationChange = (event) => {\r\n        /* This function will be invoked on location value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const area = event.target.value.split('-')[0];\r\n        const city = event.target.value.split('-')[1];\r\n        const { cuisine, mealtype, hcost, lcost, page, sort } = this.state;\r\n\r\n        // making the input object for filter API basis changed location\r\n        let filterObj = {\r\n            location_id: area,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${area}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurantList: response.data.restaurant, pageCount: response.data.pageCount, location: area }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        /* This function will be invoked on pagination value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const page = pageNumber;\r\n        const { location, cuisine, mealtype, hcost, lcost, sort } = this.state;\r\n\r\n        // making the input object for filter API basis changed pagination\r\n        let filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurantList: response.data.restaurant, pageCount: response.data.pageCount, page: page }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleCuisineChange = (cuisineId) => {\r\n        /* This function will be invoked on cuisine value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const { cuisine, location, mealtype, hcost, lcost, sort, page } = this.state;\r\n\r\n        // pushing and poping the cuisines values from array\r\n        if (cuisine.indexOf(cuisineId) == -1) {\r\n            cuisine.push(cuisineId);\r\n        }\r\n        else {\r\n            var index = cuisine.indexOf(cuisineId);\r\n            cuisine.splice(index, 1);\r\n        }\r\n\r\n        // making the input object for filter API basis changed cuisine\r\n        let filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurantList: response.data.restaurant, pageCount: response.data.pageCount, cuisine: cuisine }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    onSortChange = (sort) => {\r\n        /* This function will be invoked on sort radio button value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const { location, cuisine, lcost, hcost, mealtype, page } = this.state;\r\n\r\n        // making the input object for filter API basis changed sort option\r\n        let filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: Number(sort),\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurantList: response.data.restaurant, sort: Number(sort), pageCount: response.data.pageCount }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleCostChange = (lcost, hcost) => {\r\n        /* This function will be invoked on cost filter value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const { location, cuisine, mealtype, sort, page } = this.state;\r\n\r\n        // making the input object for filter API basis changed cost\r\n        let filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({\r\n                restaurantList: response.data.restaurant,\r\n                lcost: Number(lcost),\r\n                hcost: Number(hcost),\r\n                pageCount: response.data.pageCount\r\n            }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    // handleSortChange=(sort)=>{\r\n\r\n    //     const {mealtype_id,location_id,cusine_id,hcost,lcost,page} =this.state;\r\n    //     const filterObj = {\r\n    //         mealtype_id: mealtype_id,\r\n    //         location_id: location_id,\r\n    //         cusine_id: cusine_id,\r\n    //         hcost:hcost,\r\n    //         lcost: lcost,\r\n    //         page:page,\r\n    //         sort:sort\r\n           \r\n    //     }\r\n\r\n    //     this.props.history.push(`/filter/?mealtype=${mealtype_id}&area=${location_id}&cuisine=${cusine_id}&costlessthan=${hcost}&costmorethan=${lcost}&sort=${sort}$page=${page}`);\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ restaurants: response.data.restaurant,sort:sort})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n        \r\n\r\n       \r\n    // }\r\n\r\n    \r\n    // handleCostChange=(lCost,hCost)=>{\r\n\r\n    //     const {mealtype_id,location_id,cusine_id,page,sort} =this.state;\r\n    //     const filterObj = {\r\n    //         mealtype_id: mealtype_id,\r\n    //         location_id: location_id,\r\n    //         cusine_id: cusine_id,\r\n    //         hcost:hCost,\r\n    //         lcost: lCost,\r\n    //         page:page,\r\n    //        sort:sort\r\n           \r\n    //     }\r\n\r\n    //     this.props.history.push(`/filter/?mealtype=${mealtype_id}&area=${location_id}&cuisine=${cusine_id}&costlessthan=${hCost}&costmorethan=${lCost}&sort=${sort}$page=${page}`);\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ restaurants: response.data.restaurant, lcost: lCost,hcost:hCost})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n        \r\n\r\n       \r\n    // }\r\n\r\n     \r\n    // handleLocationsChange=()=>{\r\n\r\n    //     const {mealtype_id,location_id,cusine_id,page,sort,hCost,lCost,area} =this.state;\r\n    //     const filterObj = {\r\n    //         mealtype_id: mealtype_id,\r\n    //         location_id: location_id,\r\n    //         cusine_id: cusine_id,\r\n    //         hcost:hCost,\r\n    //         lcost: lCost,\r\n    //         page:page,\r\n    //        sort:sort,\r\n    //        area: area\r\n           \r\n    //     }\r\n\r\n    //    // this.props.history.push(`/filter/?mealtype=${mealtype_id}&area=${location_id}&cuisine=${cusine_id}&costlessthan=${hCost}&costmorethan=${lCost}&sort=${sort}$page=${page}`);\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ area: area})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n        \r\n\r\n       \r\n    // }\r\n    render() {\r\n        const { restaurantList, locationList, pageCount, sort } = this.state;\r\n        return (\r\n            <div>\r\n                <div id=\"myId\" className=\"heading-filter\">Breakfast Places in Delhi</div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3 col-md-3 col-lg-3\">\r\n                            <div className=\"filter-options\">\r\n                                <span className=\"glyphicon glyphicon-th-list toggle-span\" data-toggle=\"collapse\"\r\n                                    data-target=\"#demo\"></span>\r\n                                <div id=\"demo\" className=\"collapse show\">\r\n                                    <div className=\"filter-heading\">Filters</div>\r\n                                    <div className=\"Select-Location\">Select Location</div>\r\n                                    <select className=\"Rectangle-2236\" onChange={this.handleLocationChange}>\r\n                                        <option>Select</option>\r\n                                        {locationList.map((item) => {\r\n                                            return <option value={`${item.location_id}-${item.city_id}`}>{`${item.name}, ${item.city}`}</option>\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"Cuisine\">Cuisine</div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" value=\"1\" onChange={() => this.handleCuisineChange(1)} />\r\n                                        <span className=\"checkbox-items\">North Indian</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(2)} />\r\n                                        <span className=\"checkbox-items\">South Indian</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(3)} />\r\n                                        <span className=\"checkbox-items\">Chineese</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(4)} />\r\n                                        <span className=\"checkbox-items\">Fast Food</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(5)} />\r\n                                        <span className=\"checkbox-items\">Street Food</span>\r\n                                    </div>\r\n                                    <div className=\"Cuisine\">Cost For Two</div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 500)} />\r\n                                        <span className=\"checkbox-items\">Less than &#8377; 500</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(500, 1000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 500 to &#8377; 1000</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1000, 1500)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 1000 to &#8377; 1500</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1500, 2000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 1500 to &#8377; 2000</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(2000, 10000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 2000 +</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 10000)} />\r\n                                        <span className=\"checkbox-items\">All</span>\r\n                                    </div>\r\n                                    <div className=\"Cuisine\">Sort</div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"sort\" checked={sort == 1} onChange={() => this.onSortChange(1)} />\r\n                                        <span className=\"checkbox-items\">Price low to high</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"sort\" checked={sort == -1} onChange={() => this.onSortChange(-1)} />\r\n                                        <span className=\"checkbox-items\">Price high to low</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"col-sm-9 col-md-9 col-lg-9 scroll\">\r\n                                {restaurantList.length > 0 ? restaurantList.map((item) => {\r\n                                    return <div className=\"Item\" onClick={() => this.handleClick(item._id)}>\r\n                                        <div className=\"row pl-1\">\r\n                                            <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                                                <img className=\"img\" src={require('../images/breakfast.jpg')} />\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n                                                <div className=\"rest-name\">{item.name}</div>\r\n                                                <div className=\"res-location\">{item.locality}</div>\r\n                                                <div className=\"rest-address\">{item.city}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row padding-left\">\r\n                                            <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                                                {/* <div className=\"rest-address\">CUISINES : {item.cuisine.map((item) => item.name + ', ')}</div>\r\n                                                <div className=\"rest-address\">COST FOR TWO : {item.min_price} </div> */}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }) : <div className=\"noData\"> No Data Found</div>}\r\n                            </div>\r\n                            {pageCount.length >= 1 && <div className=\"pagination\">\r\n                                <a href=\"#\">&laquo;</a>\r\n                                {pageCount.map((item) => {\r\n                                    return < a href=\"#\">{item}</a>\r\n                                })}\r\n                                <a href=\"#\">&raquo;</a>\r\n                            </div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter3;\r\n\r\n\r\n","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Details2.js",["120","121","122","123","124","125"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Pay.js",["126"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nclass Pay extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n          name: '',\r\n          phone: '',\r\n          email:'',\r\n          amount: ''\r\n    }\r\n}\r\n\r\nhandlePayChange = () => {\r\n   \r\n    const { name,phone,email,amount } = this.state;\r\n\r\n    // making the input object for filter API basis changed location\r\n    const payObj = {\r\n        name: name,\r\n        phone: phone,\r\n        email:email,\r\n        amount: amount\r\n        \r\n    }\r\n\r\n    // axios({\r\n    //     method: 'POST',\r\n    //     url: 'http://localhost:4000/paynow',\r\n    //     headers: { 'Content-Type': 'application/json' },\r\n    //     data: payObj\r\n    // })\r\n    //     .then(response => console.log(response))\r\n    //     .catch(err => console.log(err))\r\n    fetch(`http://localhost:4000/paynow`,{\r\n        method:'POST',  \r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payObj)\r\n    }).then(response => response.json()).catch(err => console.log(err))\r\n       // e.preventDefault();\r\n}\r\n\r\n    handleChange = (event, state) => {\r\n        this.setState({ [state]: event.target.value });\r\n    }\r\n    render() {\r\n        const { name,email, phone,amount} = this.state;\r\n    \r\n        return <React.Fragment>\r\n            <div className=\"row my-5\">\r\n                <div className=\"col-md-4 offset-md-4\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <form className=\"\" action=\"http://localhost:4000/paynow\" method=\"post\">\r\n                            {/* <form> */}\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"\">Name: </label>\r\n                                   \r\n                                    <input className=\"form-control\" type=\"text\" value={name} onChange={(event) => this.handleChange(event, 'name')} />\r\n                                </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"\">Email: </label>\r\n                                        \r\n                                        <input className=\"form-control\" type=\"text\" value={email} onChange={(event) => this.handleChange(event, 'email')} />\r\n                                </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"\">Phone: </label>\r\n                                            <input className=\"form-control\" type=\"text\" value={phone} onChange={(event) => this.handleChange(event, 'phone')} />\r\n                                         \r\n                                </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label for=\"\">Amount: </label>\r\n                                                <input className=\"form-control\" type=\"text\" value={amount} onChange={(event) => this.handleChange(event, 'amount')} />\r\n                                       \r\n                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    {/* <button className=\"btn form-control btn-primary\" name=\"submit\" onSubmit={this.handlePayChange}>Pay Now</button> */}\r\n                                                    <input type=\"submit\" className=\"btn btn-danger\"  value=\"Submit\" />\r\n                                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    </div>\r\n                \r\n    </React.Fragment>\r\n\r\n    }\r\n}\r\nexport default Pay;\r\n","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\MyOrders.js",["127"],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"128","replacedBy":"132"},{"ruleId":"130","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":14},{"ruleId":"134","severity":1,"message":"138","line":16,"column":8,"nodeType":"136","messageId":"137","endLine":16,"endColumn":11},{"ruleId":"139","severity":1,"message":"140","line":138,"column":25,"nodeType":"141","messageId":"142","endLine":138,"endColumn":27},{"ruleId":"143","severity":1,"message":"144","line":145,"column":24,"nodeType":"145","messageId":"146","endLine":145,"endColumn":26},{"ruleId":"134","severity":1,"message":"147","line":166,"column":17,"nodeType":"136","messageId":"137","endLine":166,"endColumn":20},{"ruleId":"134","severity":1,"message":"148","line":244,"column":13,"nodeType":"136","messageId":"137","endLine":244,"endColumn":21},{"ruleId":"134","severity":1,"message":"149","line":280,"column":74,"nodeType":"136","messageId":"137","endLine":280,"endColumn":78},{"ruleId":"134","severity":1,"message":"150","line":280,"column":79,"nodeType":"136","messageId":"137","endLine":280,"endColumn":84},{"ruleId":"134","severity":1,"message":"151","line":280,"column":85,"nodeType":"136","messageId":"137","endLine":280,"endColumn":90},{"ruleId":"134","severity":1,"message":"152","line":280,"column":91,"nodeType":"136","messageId":"137","endLine":280,"endColumn":97},{"ruleId":"134","severity":1,"message":"153","line":280,"column":98,"nodeType":"136","messageId":"137","endLine":280,"endColumn":105},{"ruleId":"134","severity":1,"message":"154","line":280,"column":107,"nodeType":"136","messageId":"137","endLine":280,"endColumn":120},{"ruleId":"155","severity":1,"message":"156","line":292,"column":25,"nodeType":"157","endLine":292,"endColumn":104},{"ruleId":"158","severity":1,"message":"159","line":345,"column":33,"nodeType":"157","endLine":345,"endColumn":102},{"ruleId":"139","severity":1,"message":"140","line":366,"column":55,"nodeType":"141","messageId":"142","endLine":366,"endColumn":57},{"ruleId":"160","severity":1,"message":"161","line":444,"column":21,"nodeType":"157","endLine":444,"endColumn":58},{"ruleId":"160","severity":1,"message":"161","line":448,"column":21,"nodeType":"157","endLine":448,"endColumn":55},{"ruleId":"160","severity":1,"message":"161","line":452,"column":21,"nodeType":"157","endLine":452,"endColumn":45},{"ruleId":"160","severity":1,"message":"161","line":456,"column":21,"nodeType":"157","endLine":456,"endColumn":51},{"ruleId":"162","severity":1,"message":"163","line":20,"column":13,"nodeType":"164","messageId":"142","endLine":20,"endColumn":24},{"ruleId":"134","severity":1,"message":"165","line":136,"column":15,"nodeType":"136","messageId":"137","endLine":136,"endColumn":19},{"ruleId":"139","severity":1,"message":"166","line":143,"column":40,"nodeType":"141","messageId":"142","endLine":143,"endColumn":42},{"ruleId":"139","severity":1,"message":"166","line":174,"column":40,"nodeType":"141","messageId":"142","endLine":174,"endColumn":42},{"ruleId":"139","severity":1,"message":"140","line":200,"column":40,"nodeType":"141","messageId":"142","endLine":200,"endColumn":42},{"ruleId":"139","severity":1,"message":"166","line":212,"column":40,"nodeType":"141","messageId":"142","endLine":212,"endColumn":42},{"ruleId":"139","severity":1,"message":"166","line":242,"column":40,"nodeType":"141","messageId":"142","endLine":242,"endColumn":42},{"ruleId":"139","severity":1,"message":"166","line":272,"column":40,"nodeType":"141","messageId":"142","endLine":272,"endColumn":42},{"ruleId":"134","severity":1,"message":"167","line":297,"column":61,"nodeType":"136","messageId":"137","endLine":297,"endColumn":66},{"ruleId":"134","severity":1,"message":"168","line":297,"column":67,"nodeType":"136","messageId":"137","endLine":297,"endColumn":75},{"ruleId":"139","severity":1,"message":"140","line":365,"column":87,"nodeType":"141","messageId":"142","endLine":365,"endColumn":89},{"ruleId":"139","severity":1,"message":"140","line":369,"column":87,"nodeType":"141","messageId":"142","endLine":369,"endColumn":89},{"ruleId":"139","severity":1,"message":"140","line":412,"column":49,"nodeType":"141","messageId":"142","endLine":412,"endColumn":51},{"ruleId":"158","severity":1,"message":"169","line":414,"column":37,"nodeType":"157","endLine":414,"endColumn":41},{"ruleId":"158","severity":1,"message":"169","line":416,"column":48,"nodeType":"157","endLine":416,"endColumn":95},{"ruleId":"158","severity":1,"message":"169","line":418,"column":37,"nodeType":"157","endLine":418,"endColumn":40},{"ruleId":"134","severity":1,"message":"170","line":16,"column":15,"nodeType":"136","messageId":"137","endLine":16,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":76,"column":43,"nodeType":"141","messageId":"142","endLine":76,"endColumn":45},{"ruleId":"134","severity":1,"message":"171","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":12},{"ruleId":"134","severity":1,"message":"165","line":140,"column":15,"nodeType":"136","messageId":"137","endLine":140,"endColumn":19},{"ruleId":"139","severity":1,"message":"166","line":147,"column":40,"nodeType":"141","messageId":"142","endLine":147,"endColumn":42},{"ruleId":"139","severity":1,"message":"166","line":178,"column":40,"nodeType":"141","messageId":"142","endLine":178,"endColumn":42},{"ruleId":"139","severity":1,"message":"140","line":205,"column":40,"nodeType":"141","messageId":"142","endLine":205,"endColumn":42},{"ruleId":"139","severity":1,"message":"166","line":217,"column":40,"nodeType":"141","messageId":"142","endLine":217,"endColumn":42},{"ruleId":"139","severity":1,"message":"166","line":247,"column":40,"nodeType":"141","messageId":"142","endLine":247,"endColumn":42},{"ruleId":"139","severity":1,"message":"166","line":277,"column":40,"nodeType":"141","messageId":"142","endLine":277,"endColumn":42},{"ruleId":"139","severity":1,"message":"140","line":461,"column":87,"nodeType":"141","messageId":"142","endLine":461,"endColumn":89},{"ruleId":"139","severity":1,"message":"140","line":465,"column":87,"nodeType":"141","messageId":"142","endLine":465,"endColumn":89},{"ruleId":"160","severity":1,"message":"161","line":477,"column":49,"nodeType":"157","endLine":477,"endColumn":113},{"ruleId":"158","severity":1,"message":"159","line":496,"column":33,"nodeType":"157","endLine":496,"endColumn":45},{"ruleId":"158","severity":1,"message":"159","line":498,"column":44,"nodeType":"157","endLine":498,"endColumn":57},{"ruleId":"158","severity":1,"message":"159","line":500,"column":33,"nodeType":"157","endLine":500,"endColumn":45},{"ruleId":"139","severity":1,"message":"140","line":150,"column":27,"nodeType":"141","messageId":"142","endLine":150,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":156,"column":26,"nodeType":"145","messageId":"146","endLine":156,"endColumn":28},{"ruleId":"160","severity":1,"message":"161","line":177,"column":50,"nodeType":"157","endLine":177,"endColumn":128},{"ruleId":"160","severity":1,"message":"161","line":226,"column":45,"nodeType":"157","endLine":226,"endColumn":63},{"ruleId":"160","severity":1,"message":"161","line":250,"column":103,"nodeType":"157","endLine":250,"endColumn":182},{"ruleId":"139","severity":1,"message":"140","line":251,"column":63,"nodeType":"141","messageId":"142","endLine":251,"endColumn":65},{"ruleId":"134","severity":1,"message":"172","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"134","severity":1,"message":"173","line":14,"column":17,"nodeType":"136","messageId":"137","endLine":14,"endColumn":27},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],["174"],["175"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Pay' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'obj' is assigned a value but never used.","'subTotal' is assigned a value but never used.","'name' is assigned a value but never used.","'phone' is assigned a value but never used.","'email' is assigned a value but never used.","'amount' is assigned a value but never used.","'address' is assigned a value but never used.","'contactNumber' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-dupe-keys","Duplicate key 'restaurants'.","ObjectExpression","'city' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'image' is assigned a value but never used.","'location' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'locationID' is assigned a value but never used.","'Img1' is defined but never used.","'axios' is defined but never used.","'Orderitems' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]