[{"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\index.js":"1","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\reportWebVitals.js":"2","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Router.js":"3","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Home.js":"4","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Details.js":"5","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Filter.js":"6","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\QuickSearch.js":"7","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Wallpaper.js":"8","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\QuickSearchItem.js":"9","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Header.js":"10","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Filter3.js":"11","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Details2.js":"12","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Pay.js":"13"},{"size":175,"mtime":1608120700714,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":873,"mtime":1610700757921,"results":"17","hashOfConfig":"15"},{"size":1701,"mtime":1610193384750,"results":"18","hashOfConfig":"15"},{"size":18554,"mtime":1610731207542,"results":"19","hashOfConfig":"15"},{"size":20658,"mtime":1610725579669,"results":"20","hashOfConfig":"15"},{"size":1360,"mtime":1610365146601,"results":"21","hashOfConfig":"15"},{"size":5119,"mtime":1610722085946,"results":"22","hashOfConfig":"15"},{"size":2672,"mtime":1610452710050,"results":"23","hashOfConfig":"15"},{"size":8788,"mtime":1610337114044,"results":"24","hashOfConfig":"15"},{"size":22855,"mtime":1610520785508,"results":"25","hashOfConfig":"15"},{"size":15364,"mtime":1610538958021,"results":"26","hashOfConfig":"15"},{"size":3848,"mtime":1610706409730,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1401fyq",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\index.js",[],["59","60"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\reportWebVitals.js",[],["61","62"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Router.js",["63"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Home.js",[],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Details.js",["64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Filter.js",["82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\QuickSearch.js",[],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Wallpaper.js",[],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\QuickSearchItem.js",["98"],"import React from 'react';\r\nimport '../Styles/QuickSearch.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// import breakfast from '../images/breakfast.jpg';\r\n\r\n// import dinner from '../images/dinner.png';\r\n// import drinks from '../images/drinks.png';\r\n// import lunch from '../images/lunch.jpg';\r\n// import snacks from '../images/snacks.png';\r\n// import food from '../images/food.jpg';\r\n\r\nclass QuickSearchItem extends React.Component {\r\n    handleClick = (id) => {\r\n        //const locationID=11;\r\n        const locationID = sessionStorage.getItem('LocationID');\r\n        //const  CityName=sessionStorage.getItem('CityName');\r\n        const mealtype = id;\r\n        const city = sessionStorage.getItem('city');\r\n        const area = sessionStorage.getItem('area');\r\n       \r\n        if (area) {\r\n            //this.props.history.push(`/filter/?mealtype=${id}&area=${locationID}`);\r\n            this.props.history.push(`/filter/?mealtype=${mealtype}&area=${area}&city=${city}`);\r\n\r\n        }\r\n        else {\r\n            this.props.history.push(`/filter/?mealtype=${id}`);\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const { id, name, content, image } = this.props;\r\n        return (\r\n\r\n        //    <div className=\"\">\r\n        //     <div className=\"row\">\r\n         \r\n        //     <div className=\"col-sm-4 col-md-4 col-lg-4\" onClick={() => this.handleClick(id)}>\r\n        //         <div className=\"main-block\">\r\n        //             <div className=\"left-block\">\r\n        //                 <img className=\"img2\" src={'../images/' + image} alt=\"design\" height=\"150\" width=\"140\" />\r\n        //             </div>\r\n        //             <div className=\"right-block\">\r\n        //                 <div className=\"Start-with-exclusive-options\">{name}</div>\r\n        //                 <div className=\"Right-Subheading\">{content}</div>\r\n        //             </div>  \r\n        //         </div>\r\n        //     </div>\r\n       \r\n        //     </div>\r\n        //     </div>\r\n            <div className=\"col-sm-12 col-md-3 col-lg-4\" onClick={() => this.handleClick(id)}>\r\n                <div className=\"main-block\">             \r\n                   <div className=\"left-block\">\r\n                        <img className=\"img2\" src={image}  alt=\"design\" height=\"150\" width=\"140\"/> \r\n                    </div>\r\n                   <div className=\"right-block\">\r\n                        <div className=\"Start-with-exclusive-options\">{name}</div>     \r\n                        <div className=\"Right-Subheading\">{content}</div>\r\n                   </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default withRouter(QuickSearchItem);","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Header.js",["99"],"import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport axios from 'axios';\r\nimport '../Styles/header.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        backgroundColor: 'white',\r\n        border: 'solid 2px brown'\r\n    }\r\n};\r\n\r\nclass Header extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            signUpModalIsOpen: false,\r\n            loginModalIsOpen: false,\r\n            email: '',\r\n            pwd: '',\r\n            name: '',\r\n            isLoggedIn: false,\r\n            loggedInUser: ''\r\n        }\r\n    }\r\n\r\n    signUp = () => {\r\n        this.setState({ signUpModalIsOpen: true });\r\n    }\r\n\r\n    login = () => {\r\n        this.setState({ loginModalIsOpen: true });\r\n    }\r\n\r\n    handleCancelSignUp = () => {\r\n        this.setState({ signUpModalIsOpen: false });\r\n    }\r\n\r\n    handleCancelLogin = () => {\r\n        this.setState({ loginModalIsOpen: false });\r\n    }\r\n\r\n    handleChange = (event, state) => {\r\n        this.setState({ [state]: event.target.value });\r\n    }\r\n\r\n    handleSignUp = () => {\r\n        const { email, pwd, name } = this.state;\r\n        const signUpObj = {\r\n            email: email,\r\n            password: pwd,\r\n            name: name\r\n            \r\n        };\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/signup',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: signUpObj\r\n        })\r\n            .then(response => {\r\n                if (response.data.message == 'User SignedUp Sucessfully') {\r\n                    this.setState({\r\n                        signUpModalIsOpen: false,\r\n                        email: '',\r\n                        pwd: '',\r\n                        name: ''\r\n                      \r\n                    });\r\n                    alert(response.data.message);\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleLogin = () => {\r\n        const { email, pwd } = this.state;\r\n        const loginObj = {\r\n            email: email,\r\n            password: pwd\r\n        };\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:8901/login',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: loginObj\r\n        })\r\n            .then(response => {\r\n                this.setState({\r\n                    isLoggedIn: response.data.isAuthenticated,\r\n                    loginModalIsOpen: false,\r\n                    email: '',\r\n                    pwd: '',\r\n                });\r\n                sessionStorage.setItem('isLoggedIn', response.data.isAuthenticated);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleLogo = () => {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    responseGoogle = (response) => {\r\n        this.setState({ loggedInUser: response.profileObj.name, isLoggedIn: true, loginModalIsOpen: false });\r\n    }\r\n\r\n    responseFacebook = (response) => {\r\n        this.setState({ loggedInUser: response.name, isLoggedIn: true, loginModalIsOpen: false });\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.setState({ isLoggedIn: false, loggedInUser: undefined })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ loginModalIsOpen: false })\r\n    }\r\n\r\n    handleCloseSignup =()=>{\r\n        this.setState({ signUpModalIsOpen: false })\r\n    }\r\n    render() {\r\n        const { signUpModalIsOpen, loginModalIsOpen, email, pwd, name, isLoggedIn, loggedInUser } = this.state;\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"s-logo\" onClick={this.handleLogo}>\r\n                    <p>e!</p>\r\n                </div>\r\n                {!isLoggedIn ? <div className=\"btn-group login-block\">\r\n                    <span onClick={this.login} className=\"login\">LogIn</span>\r\n                    <span onClick={this.signUp} className=\"signUp\">Create an account</span>\r\n                </div> : <span className=\"user\">{`Logged In As : ${loggedInUser}`}<span className=\"signUp\" style={{marginLeft: '30px'}} onClick={this.handleLogout}>Logout</span></span>}\r\n                <Modal\r\n\r\n                    style={customStyles}\r\n                >\r\n                    <div>\r\n                        <h3>SignUp User</h3>\r\n                        <div><span>Email : </span><input type=\"text\" value={email} onChange={(event) => this.handleChange(event, 'email')} /></div>\r\n                        <div><span>Password : </span><input type=\"password\" value={pwd} onChange={(event) => this.handleChange(event, 'pwd')} /></div>\r\n                        <div><span>Name: </span><input type=\"text\" value={name} onChange={(event) => this.handleChange(event, 'name')} /></div>\r\n                        <button onClick={this.handleSignUp} className=\"btn btn-sm btn-primary\">SignUp</button>\r\n                        <button className=\"btn btn-sm btn-primary\" onClick={this.handleCancelSignUp}>Cancel</button>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    isOpen={loginModalIsOpen}\r\n                    style={customStyles}\r\n                >\r\n                    <div>\r\n                        <div className=\"login-heading\">Login</div>\r\n                        <div style={{ marginBottom: '2px' }}>\r\n                            <GoogleLogin\r\n                                clientId=\"398221811516-7g4tdhnemd5ke5gmod0mfp1b9ovpfh1u.apps.googleusercontent.com\"\r\n                                buttonText=\"Continue with Gmail\"\r\n                                onSuccess={this.responseGoogle}\r\n                                onFailure={this.responseGoogle}\r\n                                className=\"btn google\"\r\n                                cookiePolicy={'single_host_origin'}\r\n                            /></div>\r\n                        <FacebookLogin\r\n                            appId=\"241783303998158\"\r\n                            textButton=\"Continue with Facebook\"\r\n                            size=\"metro\"\r\n                            fields=\"name,email,picture\"\r\n                            callback={this.responseFacebook}\r\n                            cssClass=\"btn-md fb\"\r\n                            icon=\"fa-facebook-square\"\r\n                        /><br />\r\n                        <button className=\"btn normal-login\">\r\n                            <span className=\"glyphicon glyphicon-user user-icon\"></span>\r\n                            Login with Credentials</button>\r\n                        <hr />\r\n                        <div>Don't have account? <span style={{ color: 'red' }}>SignUp</span></div>\r\n                        <div>Don't want to login <span style={{ color: 'blue' }} onClick= {this.handleClose}>Close</span></div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    isOpen={signUpModalIsOpen}\r\n                    style={customStyles}\r\n                >\r\n                    <div>\r\n                        <div className=\"login-heading\">Sign Up</div>\r\n                        <div style={{ marginBottom: '2px' }}>\r\n                            <GoogleLogin\r\n                                clientId=\"745717577080-5uo0jrq7g23qqioe155h28u94a0co1cj.apps.googleusercontent.com\"\r\n                                buttonText=\"Continue with Gmail\"\r\n                                onSuccess={this.responseGoogle}\r\n                                onFailure={this.responseGoogle}\r\n                                className=\"google\"\r\n                                cookiePolicy={'single_host_origin'}\r\n                            /></div>\r\n                        <FacebookLogin\r\n                            appId=\"1938560389620287\"\r\n                            textButton=\"Continue with Facebook\"\r\n                            size=\"metro\"\r\n                            fields=\"name,email,picture\"\r\n                            callback={this.responseFacebook}\r\n                            cssClass=\"btn-md fb\"\r\n                            icon=\"fa-facebook-square\"\r\n                        />\r\n                        <hr />\r\n                        <div>Already have an account? <span style={{ color: 'red' }}>Login</span></div>\r\n                        <div>Don't want to login <span style={{ color: 'blue' }} onClick= {this.handleCloseSignup}>Close</span></div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Filter3.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113"],"import React from 'react';\r\n//import '../Styles/filter.css';\r\nimport Img1 from '../images/img1.png';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport '../Styles/search.css';         // Importing css file for external styles\r\n\r\n\r\n\r\n// import { withRouter } from 'react-router-dom';\r\nclass Filter3 extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            restaurants: [],\r\n            locations:[],\r\n            location_id: undefined,\r\n            mealtype_id: undefined, //initially mealType:undefined\r\n            cusine_id: undefined,\r\n            lcost: undefined,\r\n            hcost: undefined,\r\n            area:undefined,\r\n            page: 1,\r\n            sort: 1, //defulau sortin g 1 ascending\r\n            restaurantList: [],\r\n            locationList: [],\r\n            pageCount: [],\r\n            location: undefined,\r\n            cuisine: [],\r\n            mealtype: undefined\r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        sessionStorage.clear();\r\n    }\r\n    componentDidMount() {\r\n         //console.log(this.props.location.search); //to capture valuyes from  url we use this\r\n        const queryParams = queryString.parse(this.props.location.search);\r\n        const mealtype_id = queryParams.mealtype;\r\n        const location_id = queryParams.city;\r\n        const cuisine_id = queryParams.cuisine;\r\n        const hcost=queryParams.costlessthan;\r\n        const lcost=queryParams.costmorethan;\r\n        const page = queryParams.page;\r\n        const sort = queryParams.sort;\r\n\r\n        // const locationid =queryParams.locationid;\r\n        // const mealTypeId=queryParams.MealTypeId\r\n        // const cusineId = queryParams.cusineId;\r\n        // const lCost = queryParams.lCost;\r\n        // const hCost = queryParams.hCost;\r\n        \r\n        //filter api call\r\n\r\n      let filterObj = {\r\n            location_id: location_id,\r\n            mealtype_id: mealtype_id,\r\n            cuisine_id : cuisine_id ,\r\n            \r\n            lCost: lcost,\r\n            hCost: hcost,\r\n            page: page,\r\n            sort: sort\r\n\r\n        };\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({\r\n                restaurantList: response.data.restaurant,\r\n                pageCount: response.data.pageCount,\r\n                mealtype: mealtype_id,\r\n                location: location_id\r\n            }))\r\n            .catch(err => console.log(err))\r\n\r\n            axios({\r\n                method : 'GET',\r\n                url:'http://localhost:8901/location',\r\n                headers:{'Content-Type':'application/json'}\r\n            \r\n            }).then(response =>{\r\n                    this.setState({locationList: response.data.cities })\r\n            }).catch(error=>{\r\n                return console.log(error);\r\n            })\r\n\r\n\r\n        // Making location API Call to bind the values in location dropdown\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/api/cityList',\r\n    //         headers: { 'Content-Type': 'application/json' }\r\n    //     }).then(response => this.setState({ locationList: response.data.city }))\r\n    //         .catch(err => console.log(err))\r\n    // }\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ \r\n    //             restaurants: response.data.restaurant,\r\n    //             pageCount: response.data.pageCount,\r\n    //             location_id: location_id, \r\n    //             mealtype_id: mealtype_id})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n\r\n    //     axios({\r\n    //         method : 'GET',\r\n    //         url:'http://localhost:8901/location',\r\n    //         headers:{'Content-Type':'application/json'}\r\n        \r\n    //     }).then(response =>{\r\n    //             this.setState({locations :response.data.cities })\r\n    //     }).catch(error=>{\r\n    //         return console.log(error);\r\n    //     })\r\n    }\r\n\r\n    handleClick = (itemId) => {\r\n        this.props.history.push(`/details/?restaurantId=${itemId}`);\r\n\r\n    }\r\n\r\n    handleLocationChange = (event) => {\r\n        /* This function will be invoked on location value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const area = event.target.value.split('-')[0];\r\n        const city = event.target.value.split('-')[1];\r\n        const { cuisine, mealtype, hcost, lcost, page, sort } = this.state;\r\n\r\n        // making the input object for filter API basis changed location\r\n        let filterObj = {\r\n            location_id: area,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${area}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurantList: response.data.restaurant, pageCount: response.data.pageCount, location: area }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        /* This function will be invoked on pagination value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const page = pageNumber;\r\n        const { location, cuisine, mealtype, hcost, lcost, sort } = this.state;\r\n\r\n        // making the input object for filter API basis changed pagination\r\n        let filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurantList: response.data.restaurant, pageCount: response.data.pageCount, page: page }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleCuisineChange = (cuisineId) => {\r\n        /* This function will be invoked on cuisine value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const { cuisine, location, mealtype, hcost, lcost, sort, page } = this.state;\r\n\r\n        // pushing and poping the cuisines values from array\r\n        if (cuisine.indexOf(cuisineId) == -1) {\r\n            cuisine.push(cuisineId);\r\n        }\r\n        else {\r\n            var index = cuisine.indexOf(cuisineId);\r\n            cuisine.splice(index, 1);\r\n        }\r\n\r\n        // making the input object for filter API basis changed cuisine\r\n        let filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurantList: response.data.restaurant, pageCount: response.data.pageCount, cuisine: cuisine }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    onSortChange = (sort) => {\r\n        /* This function will be invoked on sort radio button value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const { location, cuisine, lcost, hcost, mealtype, page } = this.state;\r\n\r\n        // making the input object for filter API basis changed sort option\r\n        let filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: Number(sort),\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurantList: response.data.restaurant, sort: Number(sort), pageCount: response.data.pageCount }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleCostChange = (lcost, hcost) => {\r\n        /* This function will be invoked on cost filter value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const { location, cuisine, mealtype, sort, page } = this.state;\r\n\r\n        // making the input object for filter API basis changed cost\r\n        let filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({\r\n                restaurantList: response.data.restaurant,\r\n                lcost: Number(lcost),\r\n                hcost: Number(hcost),\r\n                pageCount: response.data.pageCount\r\n            }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    // handleSortChange=(sort)=>{\r\n\r\n    //     const {mealtype_id,location_id,cusine_id,hcost,lcost,page} =this.state;\r\n    //     const filterObj = {\r\n    //         mealtype_id: mealtype_id,\r\n    //         location_id: location_id,\r\n    //         cusine_id: cusine_id,\r\n    //         hcost:hcost,\r\n    //         lcost: lcost,\r\n    //         page:page,\r\n    //         sort:sort\r\n           \r\n    //     }\r\n\r\n    //     this.props.history.push(`/filter/?mealtype=${mealtype_id}&area=${location_id}&cuisine=${cusine_id}&costlessthan=${hcost}&costmorethan=${lcost}&sort=${sort}$page=${page}`);\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ restaurants: response.data.restaurant,sort:sort})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n        \r\n\r\n       \r\n    // }\r\n\r\n    \r\n    // handleCostChange=(lCost,hCost)=>{\r\n\r\n    //     const {mealtype_id,location_id,cusine_id,page,sort} =this.state;\r\n    //     const filterObj = {\r\n    //         mealtype_id: mealtype_id,\r\n    //         location_id: location_id,\r\n    //         cusine_id: cusine_id,\r\n    //         hcost:hCost,\r\n    //         lcost: lCost,\r\n    //         page:page,\r\n    //        sort:sort\r\n           \r\n    //     }\r\n\r\n    //     this.props.history.push(`/filter/?mealtype=${mealtype_id}&area=${location_id}&cuisine=${cusine_id}&costlessthan=${hCost}&costmorethan=${lCost}&sort=${sort}$page=${page}`);\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ restaurants: response.data.restaurant, lcost: lCost,hcost:hCost})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n        \r\n\r\n       \r\n    // }\r\n\r\n     \r\n    // handleLocationsChange=()=>{\r\n\r\n    //     const {mealtype_id,location_id,cusine_id,page,sort,hCost,lCost,area} =this.state;\r\n    //     const filterObj = {\r\n    //         mealtype_id: mealtype_id,\r\n    //         location_id: location_id,\r\n    //         cusine_id: cusine_id,\r\n    //         hcost:hCost,\r\n    //         lcost: lCost,\r\n    //         page:page,\r\n    //        sort:sort,\r\n    //        area: area\r\n           \r\n    //     }\r\n\r\n    //    // this.props.history.push(`/filter/?mealtype=${mealtype_id}&area=${location_id}&cuisine=${cusine_id}&costlessthan=${hCost}&costmorethan=${lCost}&sort=${sort}$page=${page}`);\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ area: area})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n        \r\n\r\n       \r\n    // }\r\n    render() {\r\n        const { restaurantList, locationList, pageCount, sort } = this.state;\r\n        return (\r\n            <div>\r\n                <div id=\"myId\" className=\"heading-filter\">Breakfast Places in Delhi</div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3 col-md-3 col-lg-3\">\r\n                            <div className=\"filter-options\">\r\n                                <span className=\"glyphicon glyphicon-th-list toggle-span\" data-toggle=\"collapse\"\r\n                                    data-target=\"#demo\"></span>\r\n                                <div id=\"demo\" className=\"collapse show\">\r\n                                    <div className=\"filter-heading\">Filters</div>\r\n                                    <div className=\"Select-Location\">Select Location</div>\r\n                                    <select className=\"Rectangle-2236\" onChange={this.handleLocationChange}>\r\n                                        <option>Select</option>\r\n                                        {locationList.map((item) => {\r\n                                            return <option value={`${item.location_id}-${item.city_id}`}>{`${item.name}, ${item.city}`}</option>\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"Cuisine\">Cuisine</div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" value=\"1\" onChange={() => this.handleCuisineChange(1)} />\r\n                                        <span className=\"checkbox-items\">North Indian</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(2)} />\r\n                                        <span className=\"checkbox-items\">South Indian</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(3)} />\r\n                                        <span className=\"checkbox-items\">Chineese</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(4)} />\r\n                                        <span className=\"checkbox-items\">Fast Food</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(5)} />\r\n                                        <span className=\"checkbox-items\">Street Food</span>\r\n                                    </div>\r\n                                    <div className=\"Cuisine\">Cost For Two</div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 500)} />\r\n                                        <span className=\"checkbox-items\">Less than &#8377; 500</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(500, 1000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 500 to &#8377; 1000</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1000, 1500)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 1000 to &#8377; 1500</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1500, 2000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 1500 to &#8377; 2000</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(2000, 10000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 2000 +</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 10000)} />\r\n                                        <span className=\"checkbox-items\">All</span>\r\n                                    </div>\r\n                                    <div className=\"Cuisine\">Sort</div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"sort\" checked={sort == 1} onChange={() => this.onSortChange(1)} />\r\n                                        <span className=\"checkbox-items\">Price low to high</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"sort\" checked={sort == -1} onChange={() => this.onSortChange(-1)} />\r\n                                        <span className=\"checkbox-items\">Price high to low</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"col-sm-9 col-md-9 col-lg-9 scroll\">\r\n                                {restaurantList.length > 0 ? restaurantList.map((item) => {\r\n                                    return <div className=\"Item\" onClick={() => this.handleClick(item._id)}>\r\n                                        <div className=\"row pl-1\">\r\n                                            <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                                                <img className=\"img\" src={require('../images/breakfast.jpg')} />\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n                                                <div className=\"rest-name\">{item.name}</div>\r\n                                                <div className=\"res-location\">{item.locality}</div>\r\n                                                <div className=\"rest-address\">{item.city}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row padding-left\">\r\n                                            <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                                                {/* <div className=\"rest-address\">CUISINES : {item.cuisine.map((item) => item.name + ', ')}</div>\r\n                                                <div className=\"rest-address\">COST FOR TWO : {item.min_price} </div> */}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }) : <div className=\"noData\"> No Data Found</div>}\r\n                            </div>\r\n                            {pageCount.length >= 1 && <div className=\"pagination\">\r\n                                <a href=\"#\">&laquo;</a>\r\n                                {pageCount.map((item) => {\r\n                                    return < a href=\"#\">{item}</a>\r\n                                })}\r\n                                <a href=\"#\">&raquo;</a>\r\n                            </div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter3;\r\n\r\n\r\n","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Details2.js",["114","115","116","117","118","119"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Pay.js",["120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":14},{"ruleId":"127","severity":1,"message":"131","line":16,"column":8,"nodeType":"129","messageId":"130","endLine":16,"endColumn":11},{"ruleId":"132","severity":1,"message":"133","line":138,"column":25,"nodeType":"134","messageId":"135","endLine":138,"endColumn":27},{"ruleId":"136","severity":1,"message":"137","line":145,"column":24,"nodeType":"138","messageId":"139","endLine":145,"endColumn":26},{"ruleId":"127","severity":1,"message":"140","line":166,"column":17,"nodeType":"129","messageId":"130","endLine":166,"endColumn":20},{"ruleId":"127","severity":1,"message":"141","line":244,"column":13,"nodeType":"129","messageId":"130","endLine":244,"endColumn":21},{"ruleId":"127","severity":1,"message":"142","line":280,"column":74,"nodeType":"129","messageId":"130","endLine":280,"endColumn":78},{"ruleId":"127","severity":1,"message":"143","line":280,"column":79,"nodeType":"129","messageId":"130","endLine":280,"endColumn":84},{"ruleId":"127","severity":1,"message":"144","line":280,"column":85,"nodeType":"129","messageId":"130","endLine":280,"endColumn":90},{"ruleId":"127","severity":1,"message":"145","line":280,"column":91,"nodeType":"129","messageId":"130","endLine":280,"endColumn":97},{"ruleId":"127","severity":1,"message":"146","line":280,"column":98,"nodeType":"129","messageId":"130","endLine":280,"endColumn":105},{"ruleId":"127","severity":1,"message":"147","line":280,"column":107,"nodeType":"129","messageId":"130","endLine":280,"endColumn":120},{"ruleId":"148","severity":1,"message":"149","line":292,"column":25,"nodeType":"150","endLine":292,"endColumn":104},{"ruleId":"151","severity":1,"message":"152","line":345,"column":33,"nodeType":"150","endLine":345,"endColumn":102},{"ruleId":"132","severity":1,"message":"133","line":366,"column":55,"nodeType":"134","messageId":"135","endLine":366,"endColumn":57},{"ruleId":"153","severity":1,"message":"154","line":443,"column":21,"nodeType":"150","endLine":443,"endColumn":58},{"ruleId":"153","severity":1,"message":"154","line":447,"column":21,"nodeType":"150","endLine":447,"endColumn":55},{"ruleId":"153","severity":1,"message":"154","line":451,"column":21,"nodeType":"150","endLine":451,"endColumn":45},{"ruleId":"153","severity":1,"message":"154","line":455,"column":21,"nodeType":"150","endLine":455,"endColumn":51},{"ruleId":"155","severity":1,"message":"156","line":20,"column":13,"nodeType":"157","messageId":"135","endLine":20,"endColumn":24},{"ruleId":"127","severity":1,"message":"158","line":136,"column":15,"nodeType":"129","messageId":"130","endLine":136,"endColumn":19},{"ruleId":"132","severity":1,"message":"159","line":143,"column":40,"nodeType":"134","messageId":"135","endLine":143,"endColumn":42},{"ruleId":"132","severity":1,"message":"159","line":174,"column":40,"nodeType":"134","messageId":"135","endLine":174,"endColumn":42},{"ruleId":"132","severity":1,"message":"133","line":200,"column":40,"nodeType":"134","messageId":"135","endLine":200,"endColumn":42},{"ruleId":"132","severity":1,"message":"159","line":212,"column":40,"nodeType":"134","messageId":"135","endLine":212,"endColumn":42},{"ruleId":"132","severity":1,"message":"159","line":242,"column":40,"nodeType":"134","messageId":"135","endLine":242,"endColumn":42},{"ruleId":"132","severity":1,"message":"159","line":272,"column":40,"nodeType":"134","messageId":"135","endLine":272,"endColumn":42},{"ruleId":"127","severity":1,"message":"160","line":297,"column":61,"nodeType":"129","messageId":"130","endLine":297,"endColumn":66},{"ruleId":"127","severity":1,"message":"161","line":297,"column":67,"nodeType":"129","messageId":"130","endLine":297,"endColumn":75},{"ruleId":"132","severity":1,"message":"133","line":365,"column":87,"nodeType":"134","messageId":"135","endLine":365,"endColumn":89},{"ruleId":"132","severity":1,"message":"133","line":369,"column":87,"nodeType":"134","messageId":"135","endLine":369,"endColumn":89},{"ruleId":"132","severity":1,"message":"133","line":412,"column":49,"nodeType":"134","messageId":"135","endLine":412,"endColumn":51},{"ruleId":"151","severity":1,"message":"162","line":414,"column":37,"nodeType":"150","endLine":414,"endColumn":41},{"ruleId":"151","severity":1,"message":"162","line":416,"column":48,"nodeType":"150","endLine":416,"endColumn":95},{"ruleId":"151","severity":1,"message":"162","line":418,"column":37,"nodeType":"150","endLine":418,"endColumn":40},{"ruleId":"127","severity":1,"message":"163","line":16,"column":15,"nodeType":"129","messageId":"130","endLine":16,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":72,"column":43,"nodeType":"134","messageId":"135","endLine":72,"endColumn":45},{"ruleId":"127","severity":1,"message":"164","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":12},{"ruleId":"127","severity":1,"message":"158","line":140,"column":15,"nodeType":"129","messageId":"130","endLine":140,"endColumn":19},{"ruleId":"132","severity":1,"message":"159","line":147,"column":40,"nodeType":"134","messageId":"135","endLine":147,"endColumn":42},{"ruleId":"132","severity":1,"message":"159","line":178,"column":40,"nodeType":"134","messageId":"135","endLine":178,"endColumn":42},{"ruleId":"132","severity":1,"message":"133","line":205,"column":40,"nodeType":"134","messageId":"135","endLine":205,"endColumn":42},{"ruleId":"132","severity":1,"message":"159","line":217,"column":40,"nodeType":"134","messageId":"135","endLine":217,"endColumn":42},{"ruleId":"132","severity":1,"message":"159","line":247,"column":40,"nodeType":"134","messageId":"135","endLine":247,"endColumn":42},{"ruleId":"132","severity":1,"message":"159","line":277,"column":40,"nodeType":"134","messageId":"135","endLine":277,"endColumn":42},{"ruleId":"132","severity":1,"message":"133","line":461,"column":87,"nodeType":"134","messageId":"135","endLine":461,"endColumn":89},{"ruleId":"132","severity":1,"message":"133","line":465,"column":87,"nodeType":"134","messageId":"135","endLine":465,"endColumn":89},{"ruleId":"153","severity":1,"message":"154","line":477,"column":49,"nodeType":"150","endLine":477,"endColumn":113},{"ruleId":"151","severity":1,"message":"152","line":496,"column":33,"nodeType":"150","endLine":496,"endColumn":45},{"ruleId":"151","severity":1,"message":"152","line":498,"column":44,"nodeType":"150","endLine":498,"endColumn":57},{"ruleId":"151","severity":1,"message":"152","line":500,"column":33,"nodeType":"150","endLine":500,"endColumn":45},{"ruleId":"132","severity":1,"message":"133","line":150,"column":27,"nodeType":"134","messageId":"135","endLine":150,"endColumn":29},{"ruleId":"136","severity":1,"message":"137","line":156,"column":26,"nodeType":"138","messageId":"139","endLine":156,"endColumn":28},{"ruleId":"153","severity":1,"message":"154","line":177,"column":50,"nodeType":"150","endLine":177,"endColumn":128},{"ruleId":"153","severity":1,"message":"154","line":226,"column":45,"nodeType":"150","endLine":226,"endColumn":63},{"ruleId":"153","severity":1,"message":"154","line":250,"column":103,"nodeType":"150","endLine":250,"endColumn":182},{"ruleId":"132","severity":1,"message":"133","line":251,"column":63,"nodeType":"134","messageId":"135","endLine":251,"endColumn":65},{"ruleId":"127","severity":1,"message":"165","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":13},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],["166"],["167"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Pay' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'obj' is assigned a value but never used.","'subTotal' is assigned a value but never used.","'name' is assigned a value but never used.","'phone' is assigned a value but never used.","'email' is assigned a value but never used.","'amount' is assigned a value but never used.","'address' is assigned a value but never used.","'contactNumber' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-dupe-keys","Duplicate key 'restaurants'.","ObjectExpression","'city' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'image' is assigned a value but never used.","'location' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'locationID' is assigned a value but never used.","'Img1' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]