[{"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\index.js":"1","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\reportWebVitals.js":"2","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Router.js":"3","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Home.js":"4","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Details.js":"5","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Filter.js":"6","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\QuickSearch.js":"7","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Wallpaper.js":"8","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\QuickSearchItem.js":"9","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Header.js":"10","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Filter3.js":"11","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Details2.js":"12","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Pay.js":"13","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\MyOrders.js":"14","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\SubHeaher.js":"15","C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\index.js":"16","C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\Router.js":"17","C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\Home.js":"18","C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\Filter.js":"19","C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\Header.js":"20","C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\Details.js":"21","C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\MyOrders.js":"22","C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\Wallpaper.js":"23","C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\QuickSearch.js":"24","C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\SubHeaher.js":"25","C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\QuickSearchItem.js":"26"},{"size":175,"mtime":1608120700714,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":982,"mtime":1611199331139,"results":"30","hashOfConfig":"28"},{"size":1701,"mtime":1610193384750,"results":"31","hashOfConfig":"28"},{"size":21973,"mtime":1611219273871,"results":"32","hashOfConfig":"28"},{"size":20832,"mtime":1611199848929,"results":"33","hashOfConfig":"28"},{"size":1360,"mtime":1610365146601,"results":"34","hashOfConfig":"28"},{"size":5119,"mtime":1610722085946,"results":"35","hashOfConfig":"28"},{"size":2672,"mtime":1610452710050,"results":"36","hashOfConfig":"28"},{"size":9084,"mtime":1611219939841,"results":"37","hashOfConfig":"28"},{"size":22855,"mtime":1610520785508,"results":"38","hashOfConfig":"28"},{"size":15364,"mtime":1610538958021,"results":"39","hashOfConfig":"28"},{"size":3848,"mtime":1610706409730,"results":"40","hashOfConfig":"28"},{"size":3901,"mtime":1611202998510,"results":"41","hashOfConfig":"28"},{"size":593,"mtime":1611199692533,"results":"42","hashOfConfig":"28"},{"size":175,"mtime":1608120700714,"results":"43","hashOfConfig":"44"},{"size":993,"mtime":1611223564516,"results":"45","hashOfConfig":"44"},{"size":1739,"mtime":1611222436395,"results":"46","hashOfConfig":"44"},{"size":21022,"mtime":1611222389541,"results":"47","hashOfConfig":"44"},{"size":9122,"mtime":1611222416180,"results":"48","hashOfConfig":"44"},{"size":22128,"mtime":1611223576920,"results":"49","hashOfConfig":"44"},{"size":3920,"mtime":1611222454006,"results":"50","hashOfConfig":"44"},{"size":5138,"mtime":1611222552796,"results":"51","hashOfConfig":"44"},{"size":1360,"mtime":1610365146601,"results":"52","hashOfConfig":"44"},{"size":593,"mtime":1611199692533,"results":"53","hashOfConfig":"44"},{"size":2672,"mtime":1610452710050,"results":"54","hashOfConfig":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1401fyq",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"co628q",{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\index.js",[],["115","116"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\reportWebVitals.js",[],["117","118"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Router.js",["119"],"import React from 'react';\r\nimport {BrowserRouter,Route } from 'react-router-dom';\r\n\r\nimport Home from '../Components/Home';\r\nimport Filter from '../Components/Filter';\r\nimport Details from '../Components/Details';\r\n\r\nimport Header from './Header';\r\n//import Filter from './Filter';\r\nimport Pay from '../Components/Pay';\r\nimport MyOrders from '../Components/MyOrders';\r\n\r\nfunction Router(){\r\n\r\n    return(\r\n\r\n        <BrowserRouter>\r\n            {/* <Header /> */}\r\n           <Route exact path=\"/\" component={Home} /> \r\n           < Route path=\"/details\" component={Details} />\r\n           < Route path=\"/filter\" component={Filter} />\r\n           < Route path=\"/Pay\" component={Pay} />\r\n           < Route path=\"/MyOrders\" component={MyOrders} />\r\n          \r\n        </BrowserRouter>\r\n        // default url is subset of second url so child also shows parent /child\r\n        //so we use exact keyword here to differentiate it from /child\r\n    ) \r\n    \r\n}\r\n\r\nexport default Router;","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Home.js",[],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Details.js",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Filter.js",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"import React from 'react';             // Importing React to create a component\r\nimport '../Styles/search.css';         // Importing css file for external styles\r\nimport axios from 'axios';             // Importing axios to make API Calls within the component\r\nimport queryString from 'query-string';// Importing query-string package to parse the values from URL's query string \r\n\r\nimport SubHeaher from '../Components/SubHeaher';\r\nclass Filter extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            restaurants: [],\r\n            locations:[],\r\n            location_id: undefined,\r\n            mealtype_id: undefined, //initially mealType:undefined\r\n            cusine_id: undefined,\r\n            lcost: undefined,\r\n            hcost: undefined,\r\n            area:undefined,\r\n            page: 1,\r\n            sort: 1, //defulau sortin g 1 ascending\r\n            restaurants: [],\r\n            locationList: [],\r\n            pageCount: [],\r\n            location: undefined,\r\n            cuisine: [],\r\n            mealtype: undefined\r\n           \r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n       // sessionStorage.clear();\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.location.search); //to capture valuyes from  url we use this\r\n        const queryParams = queryString.parse(this.props.location.search);\r\n        const mealtype_id = queryParams.mealtype;\r\n        const location_id = queryParams.city;\r\n        const cuisine_id = queryParams.cuisine;\r\n        const hcost=queryParams.costlessthan;\r\n        const lcost=queryParams.costmorethan;\r\n        const page = queryParams.page;\r\n        const sort = queryParams.sort;\r\n\r\n        // const locationid =queryParams.locationid;\r\n        // const mealTypeId=queryParams.MealTypeId\r\n        // const cusineId = queryParams.cusineId;\r\n        // const lCost = queryParams.lCost;\r\n        // const hCost = queryParams.hCost;\r\n        \r\n        //filter api call\r\n\r\n      const filterObj = {\r\n            location_id: location_id,\r\n            mealtype_id: mealtype_id,\r\n            cuisine_id : cuisine_id ,\r\n            \r\n            lCost: lcost,\r\n            hCost: hcost,\r\n            page: page,\r\n            sort: sort\r\n\r\n        };\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({\r\n                restaurants: response.data.restaurant,\r\n                pageCount: response.data.pageCount,\r\n                mealtype: mealtype_id,\r\n                location: location_id\r\n            }))\r\n            .catch(err => console.log(err))\r\n\r\n            axios({\r\n                method : 'GET',\r\n                url:'http://localhost:8901/location',\r\n                headers:{'Content-Type':'application/json'}\r\n            \r\n            }).then(response =>{\r\n                    this.setState({locationList: response.data.cities })\r\n            }).catch(error=>{\r\n                return console.log(error);\r\n            })\r\n\r\n\r\n        // Making location API Call to bind the values in location dropdown\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/api/cityList',\r\n    //         headers: { 'Content-Type': 'application/json' }\r\n    //     }).then(response => this.setState({ locationList: response.data.city }))\r\n    //         .catch(err => console.log(err))\r\n    // }\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ \r\n    //             restaurants: response.data.restaurant,\r\n    //             pageCount: response.data.pageCount,\r\n    //             location_id: location_id, \r\n    //             mealtype_id: mealtype_id})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n\r\n    //     axios({\r\n    //         method : 'GET',\r\n    //         url:'http://localhost:8901/location',\r\n    //         headers:{'Content-Type':'application/json'}\r\n        \r\n    //     }).then(response =>{\r\n    //             this.setState({locations :response.data.cities })\r\n    //     }).catch(error=>{\r\n    //         return console.log(error);\r\n    //     })\r\n    }\r\n\r\n    handleClick = (itemId) => {\r\n        this.props.history.push(`/details/?restaurantId=${itemId}`);\r\n\r\n    }\r\n\r\n    handleLocationChange = (event) => {\r\n        /* This function will be invoked on location value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const area = event.target.value.split('-')[0];\r\n        const city = event.target.value.split('-')[1];\r\n        const { location,cuisine, mealtype, hcost, lcost, page, sort } = this.state;\r\n\r\n        // making the input object for filter API basis changed location\r\n        const filterObj = {\r\n            location_id: area,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurants: response.data.restaurant, pageCount: response.data.pageCount, location: area }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        /* This function will be invoked on pagination value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const page = pageNumber;\r\n        const { location, cuisine, mealtype, hcost, lcost, sort } = this.state;\r\n\r\n        // making the input object for filter API basis changed pagination\r\n        const filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurants: response.data.restaurant, pageCount: response.data.pageCount, page: page }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleCuisineChange = (cuisineId) => {\r\n        /* This function will be invoked on cuisine value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n        const { location, cuisine, mealtype, hcost, lcost, sort, page} = this.state;\r\n    \r\n        // pushing and poping the cuisines values from array\r\n        if (cuisine.indexOf(cuisineId) == -1) {\r\n            cuisine.push(cuisineId);\r\n        }\r\n        else {\r\n            var index = cuisine.indexOf(cuisineId);\r\n            cuisine.splice(index, 1);\r\n        }\r\n\r\n        // making the input object for filter API basis changed cuisine\r\n        const filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurants: response.data.restaurant, pageCount: response.data.pageCount, cuisine: cuisine }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleSortChange = (sort) => {\r\n        /* This function will be invoked on sort radio button value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const { location, cuisine, mealtype, hcost, lcost, page } = this.state;\r\n\r\n        // making the input object for filter API basis changed sort option\r\n        const filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurants: response.data.restaurant, sort: Number(sort), pageCount: response.data.pageCount }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleCostChange = (lcost, hcost) => {\r\n        /* This function will be invoked on cost filter value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const { location, cuisine, mealtype, sort, page } = this.state;\r\n\r\n        // making the input object for filter API basis changed cost\r\n        const filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({\r\n                restaurants: response.data.restaurant,\r\n                lcost: Number(lcost),\r\n                hcost: Number(hcost),\r\n                pageCount: response.data.pageCount\r\n            }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n       \r\n        const { restaurants, locationList, pageCount, sort ,image,location} = this.state;\r\n        console.log(`restaurantlist ${restaurants}`);\r\n        return (\r\n            <React.Fragment>\r\n                 <SubHeaher />\r\n            \r\n            <div>\r\n                <div id=\"myId\" className=\"heading-filter\">Breakfast Places to look for food</div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3 col-md-3 col-lg-3\">\r\n                            <div className=\"filter-options\">\r\n                                <span className=\"glyphicon glyphicon-th-list toggle-span\" data-toggle=\"collapse\"\r\n                                    data-target=\"#demo\"></span>\r\n                                <div id=\"demo\" className=\"collapse show\">\r\n                                    <div className=\"filter-heading\">Filters</div>\r\n                                    <div className=\"Select-Location\">Select Location</div>\r\n                                    <select className=\"Rectangle-2236\" onChange={this.handleLocationChange}>\r\n                                        <option>Select</option>\r\n                                        {locationList.map((item) => {\r\n                                            return <option value={`${item.location_id}-${item.city_id}`}>{`${item.name}`}</option>\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"\">Cuisine</div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" value=\"1\" onChange={() => this.handleCuisineChange(1)} />\r\n                                        <span className=\"checkbox-items\">North Indian</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(2)} />\r\n                                        <span className=\"checkbox-items\">South Indian</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(3)} />\r\n                                        <span className=\"checkbox-items\">Chineese</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(4)} />\r\n                                        <span className=\"checkbox-items\">Fast Food</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(5)} />\r\n                                        <span className=\"checkbox-items\">Street Food</span>\r\n                                    </div>\r\n                                    <div className=\"\">Cost For Two</div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 500)} />\r\n                                        <span className=\"checkbox-items\">Less than &#8377; 500</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(500, 1000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 500 to &#8377; 1000</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1000, 1500)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 1000 to &#8377; 1500</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1500, 2000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 1500 to &#8377; 2000</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(2000, 10000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 2000 +</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 10000)} />\r\n                                        <span className=\"checkbox-items\">All</span>\r\n                                    </div>\r\n                                    <div className=\"\">Sort</div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"sort\" checked={sort == 1} onChange={() => this.handleSortChange(1)} />\r\n                                        <span className=\"checkbox-items\">Price low to high</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"sort\" checked={sort == -1} onChange={() => this.handleSortChange(-1)} />\r\n                                        <span className=\"checkbox-items\">Price high to low</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"col-sm-9 col-md-9 col-lg-9  details-section scroll\">\r\n                                {restaurants.length > 0 ? restaurants.map((item) => {\r\n                                    return <div className=\"Item\" onClick={() => this.handleClick(item._id)}>\r\n                                        <div className=\"row pl-1\">\r\n                                            <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                                                {/* <img className=\"img2\" src='/images/breakfast.png' alt=\"design\" height=\"150\" width=\"140\"/>  */}\r\n                                                <img className=\"img2\" src={item.thumb} alt=\"design\" height=\"150\" width=\"140\"/> \r\n                                            </div>\r\n                                            <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n                                                <div className=\"rest-name\">{item.name}</div>\r\n                                                <div className=\"res-location\">{item.locality}</div>\r\n                                                <div className=\"rest-address\">{item.address}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row padding-left\">\r\n                                            <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                                                <div className=\"rest-address\">CUISINES : {item.Cuisine.map((item) => item.name + ' ')}</div>\r\n                                                <div className=\"rest-address\">COST FOR TWO : {item.min_price} </div> \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }) : <div className=\"noData\"> No Data Found</div>}\r\n                            </div>\r\n                            <div>\r\n                                \r\n                            </div>\r\n                           <div>\r\n                           {/* {pageCount.length >= 1 && <div className=\"pagination\">\r\n                                <a href=\"#\">&laquo;</a>\r\n                                {pageCount.map((item) => {\r\n                                    return < a href=\"#\">{item}</a>\r\n                                })}\r\n                                <a href=\"#\">&raquo;</a>\r\n                            </div>} */}\r\n\r\n                            {restaurants.length == 0 ? null :\r\n                                <div className=\"pagination\">\r\n                                    <a >&laquo;</a>\r\n                                    {pageCount.map((item) => {\r\n                                        return <a onClick={() => this.handlePageChange(item)}>{item}</a>\r\n                                    })}\r\n                                    <a>&raquo;</a>\r\n                                </div>}\r\n                           </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter;","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\QuickSearch.js",[],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Wallpaper.js",[],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\QuickSearchItem.js",["154"],"import React from 'react';\r\nimport '../Styles/QuickSearch.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// import breakfast from '../images/breakfast.jpg';\r\n\r\n// import dinner from '../images/dinner.png';\r\n// import drinks from '../images/drinks.png';\r\n// import lunch from '../images/lunch.jpg';\r\n// import snacks from '../images/snacks.png';\r\n// import food from '../images/food.jpg';\r\n\r\nclass QuickSearchItem extends React.Component {\r\n    handleClick = (id) => {\r\n        //const locationID=11;\r\n        const locationID = sessionStorage.getItem('LocationID');\r\n        //const  CityName=sessionStorage.getItem('CityName');\r\n        const mealtype = id;\r\n        const city = sessionStorage.getItem('city');\r\n        const area = sessionStorage.getItem('area');\r\n       \r\n        if (area) {\r\n            //this.props.history.push(`/filter/?mealtype=${id}&area=${locationID}`);\r\n            this.props.history.push(`/filter/?mealtype=${mealtype}&area=${area}&city=${city}`);\r\n\r\n        }\r\n        else {\r\n            this.props.history.push(`/filter/?mealtype=${id}`);\r\n\r\n        }\r\n    }\r\n    render() {\r\n        const { id, name, content, image } = this.props;\r\n        return (\r\n\r\n        //    <div className=\"\">\r\n        //     <div className=\"row\">\r\n         \r\n        //     <div className=\"col-sm-4 col-md-4 col-lg-4\" onClick={() => this.handleClick(id)}>\r\n        //         <div className=\"main-block\">\r\n        //             <div className=\"left-block\">\r\n        //                 <img className=\"img2\" src={'../images/' + image} alt=\"design\" height=\"150\" width=\"140\" />\r\n        //             </div>\r\n        //             <div className=\"right-block\">\r\n        //                 <div className=\"Start-with-exclusive-options\">{name}</div>\r\n        //                 <div className=\"Right-Subheading\">{content}</div>\r\n        //             </div>  \r\n        //         </div>\r\n        //     </div>\r\n       \r\n        //     </div>\r\n        //     </div>\r\n            <div className=\"col-sm-12 col-md-3 col-lg-4\" onClick={() => this.handleClick(id)}>\r\n                <div className=\"main-block\">             \r\n                   <div className=\"left-block\">\r\n                        <img className=\"img2\" src={image}  alt=\"design\" height=\"150\" width=\"140\"/> \r\n                    </div>\r\n                   <div className=\"right-block\">\r\n                        <div className=\"Start-with-exclusive-options\">{name}</div>     \r\n                        <div className=\"Right-Subheading\">{content}</div>\r\n                   </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default withRouter(QuickSearchItem);","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Header.js",["155"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Filter3.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"import React from 'react';\r\n//import '../Styles/filter.css';\r\nimport Img1 from '../images/img1.png';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport '../Styles/search.css';         // Importing css file for external styles\r\n\r\n\r\n\r\n// import { withRouter } from 'react-router-dom';\r\nclass Filter3 extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            restaurants: [],\r\n            locations:[],\r\n            location_id: undefined,\r\n            mealtype_id: undefined, //initially mealType:undefined\r\n            cusine_id: undefined,\r\n            lcost: undefined,\r\n            hcost: undefined,\r\n            area:undefined,\r\n            page: 1,\r\n            sort: 1, //defulau sortin g 1 ascending\r\n            restaurantList: [],\r\n            locationList: [],\r\n            pageCount: [],\r\n            location: undefined,\r\n            cuisine: [],\r\n            mealtype: undefined\r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        sessionStorage.clear();\r\n    }\r\n    componentDidMount() {\r\n         //console.log(this.props.location.search); //to capture valuyes from  url we use this\r\n        const queryParams = queryString.parse(this.props.location.search);\r\n        const mealtype_id = queryParams.mealtype;\r\n        const location_id = queryParams.city;\r\n        const cuisine_id = queryParams.cuisine;\r\n        const hcost=queryParams.costlessthan;\r\n        const lcost=queryParams.costmorethan;\r\n        const page = queryParams.page;\r\n        const sort = queryParams.sort;\r\n\r\n        // const locationid =queryParams.locationid;\r\n        // const mealTypeId=queryParams.MealTypeId\r\n        // const cusineId = queryParams.cusineId;\r\n        // const lCost = queryParams.lCost;\r\n        // const hCost = queryParams.hCost;\r\n        \r\n        //filter api call\r\n\r\n      let filterObj = {\r\n            location_id: location_id,\r\n            mealtype_id: mealtype_id,\r\n            cuisine_id : cuisine_id ,\r\n            \r\n            lCost: lcost,\r\n            hCost: hcost,\r\n            page: page,\r\n            sort: sort\r\n\r\n        };\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({\r\n                restaurantList: response.data.restaurant,\r\n                pageCount: response.data.pageCount,\r\n                mealtype: mealtype_id,\r\n                location: location_id\r\n            }))\r\n            .catch(err => console.log(err))\r\n\r\n            axios({\r\n                method : 'GET',\r\n                url:'http://localhost:8901/location',\r\n                headers:{'Content-Type':'application/json'}\r\n            \r\n            }).then(response =>{\r\n                    this.setState({locationList: response.data.cities })\r\n            }).catch(error=>{\r\n                return console.log(error);\r\n            })\r\n\r\n\r\n        // Making location API Call to bind the values in location dropdown\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/api/cityList',\r\n    //         headers: { 'Content-Type': 'application/json' }\r\n    //     }).then(response => this.setState({ locationList: response.data.city }))\r\n    //         .catch(err => console.log(err))\r\n    // }\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ \r\n    //             restaurants: response.data.restaurant,\r\n    //             pageCount: response.data.pageCount,\r\n    //             location_id: location_id, \r\n    //             mealtype_id: mealtype_id})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n\r\n    //     axios({\r\n    //         method : 'GET',\r\n    //         url:'http://localhost:8901/location',\r\n    //         headers:{'Content-Type':'application/json'}\r\n        \r\n    //     }).then(response =>{\r\n    //             this.setState({locations :response.data.cities })\r\n    //     }).catch(error=>{\r\n    //         return console.log(error);\r\n    //     })\r\n    }\r\n\r\n    handleClick = (itemId) => {\r\n        this.props.history.push(`/details/?restaurantId=${itemId}`);\r\n\r\n    }\r\n\r\n    handleLocationChange = (event) => {\r\n        /* This function will be invoked on location value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const area = event.target.value.split('-')[0];\r\n        const city = event.target.value.split('-')[1];\r\n        const { cuisine, mealtype, hcost, lcost, page, sort } = this.state;\r\n\r\n        // making the input object for filter API basis changed location\r\n        let filterObj = {\r\n            location_id: area,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${area}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurantList: response.data.restaurant, pageCount: response.data.pageCount, location: area }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        /* This function will be invoked on pagination value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const page = pageNumber;\r\n        const { location, cuisine, mealtype, hcost, lcost, sort } = this.state;\r\n\r\n        // making the input object for filter API basis changed pagination\r\n        let filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurantList: response.data.restaurant, pageCount: response.data.pageCount, page: page }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleCuisineChange = (cuisineId) => {\r\n        /* This function will be invoked on cuisine value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const { cuisine, location, mealtype, hcost, lcost, sort, page } = this.state;\r\n\r\n        // pushing and poping the cuisines values from array\r\n        if (cuisine.indexOf(cuisineId) == -1) {\r\n            cuisine.push(cuisineId);\r\n        }\r\n        else {\r\n            var index = cuisine.indexOf(cuisineId);\r\n            cuisine.splice(index, 1);\r\n        }\r\n\r\n        // making the input object for filter API basis changed cuisine\r\n        let filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurantList: response.data.restaurant, pageCount: response.data.pageCount, cuisine: cuisine }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    onSortChange = (sort) => {\r\n        /* This function will be invoked on sort radio button value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const { location, cuisine, lcost, hcost, mealtype, page } = this.state;\r\n\r\n        // making the input object for filter API basis changed sort option\r\n        let filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: Number(sort),\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({ restaurantList: response.data.restaurant, sort: Number(sort), pageCount: response.data.pageCount }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleCostChange = (lcost, hcost) => {\r\n        /* This function will be invoked on cost filter value change from filter page,\r\n         and would automatically invoke filter API to fetch the updated restaurants basis the changed selection */\r\n\r\n        const { location, cuisine, mealtype, sort, page } = this.state;\r\n\r\n        // making the input object for filter API basis changed cost\r\n        let filterObj = {\r\n            location_id: location,\r\n            mealtype_id: mealtype,\r\n            cuisine_id: cuisine.length != 0 ? cuisine : undefined,\r\n            hcost: hcost,\r\n            lcost: lcost,\r\n            sort: sort,\r\n            page: page\r\n        };\r\n\r\n        // Update the URL basis the changed selections\r\n        this.props.history.push(`/filter?area=${location}&cuisine=${cuisine}&mealtype=${mealtype}&costlessthan=${hcost}&costmorethan=${lcost}&page=${page}&sort=${sort}`);\r\n\r\n        axios({\r\n            method: 'POST',\r\n            url: 'http://localhost:8901/filter',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: filterObj\r\n        })\r\n            .then(response => this.setState({\r\n                restaurantList: response.data.restaurant,\r\n                lcost: Number(lcost),\r\n                hcost: Number(hcost),\r\n                pageCount: response.data.pageCount\r\n            }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    // handleSortChange=(sort)=>{\r\n\r\n    //     const {mealtype_id,location_id,cusine_id,hcost,lcost,page} =this.state;\r\n    //     const filterObj = {\r\n    //         mealtype_id: mealtype_id,\r\n    //         location_id: location_id,\r\n    //         cusine_id: cusine_id,\r\n    //         hcost:hcost,\r\n    //         lcost: lcost,\r\n    //         page:page,\r\n    //         sort:sort\r\n           \r\n    //     }\r\n\r\n    //     this.props.history.push(`/filter/?mealtype=${mealtype_id}&area=${location_id}&cuisine=${cusine_id}&costlessthan=${hcost}&costmorethan=${lcost}&sort=${sort}$page=${page}`);\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ restaurants: response.data.restaurant,sort:sort})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n        \r\n\r\n       \r\n    // }\r\n\r\n    \r\n    // handleCostChange=(lCost,hCost)=>{\r\n\r\n    //     const {mealtype_id,location_id,cusine_id,page,sort} =this.state;\r\n    //     const filterObj = {\r\n    //         mealtype_id: mealtype_id,\r\n    //         location_id: location_id,\r\n    //         cusine_id: cusine_id,\r\n    //         hcost:hCost,\r\n    //         lcost: lCost,\r\n    //         page:page,\r\n    //        sort:sort\r\n           \r\n    //     }\r\n\r\n    //     this.props.history.push(`/filter/?mealtype=${mealtype_id}&area=${location_id}&cuisine=${cusine_id}&costlessthan=${hCost}&costmorethan=${lCost}&sort=${sort}$page=${page}`);\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ restaurants: response.data.restaurant, lcost: lCost,hcost:hCost})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n        \r\n\r\n       \r\n    // }\r\n\r\n     \r\n    // handleLocationsChange=()=>{\r\n\r\n    //     const {mealtype_id,location_id,cusine_id,page,sort,hCost,lCost,area} =this.state;\r\n    //     const filterObj = {\r\n    //         mealtype_id: mealtype_id,\r\n    //         location_id: location_id,\r\n    //         cusine_id: cusine_id,\r\n    //         hcost:hCost,\r\n    //         lcost: lCost,\r\n    //         page:page,\r\n    //        sort:sort,\r\n    //        area: area\r\n           \r\n    //     }\r\n\r\n    //    // this.props.history.push(`/filter/?mealtype=${mealtype_id}&area=${location_id}&cuisine=${cusine_id}&costlessthan=${hCost}&costmorethan=${lCost}&sort=${sort}$page=${page}`);\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: 'http://localhost:8901/filter',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         data: filterObj\r\n    //     }).then(response => {\r\n    //         this.setState({ area: area})\r\n    //     }).catch(error => {\r\n    //         return console.log(error);\r\n    //     })\r\n        \r\n\r\n       \r\n    // }\r\n    render() {\r\n        const { restaurantList, locationList, pageCount, sort } = this.state;\r\n        return (\r\n            <div>\r\n                <div id=\"myId\" className=\"heading-filter\">Breakfast Places in Delhi</div>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3 col-md-3 col-lg-3\">\r\n                            <div className=\"filter-options\">\r\n                                <span className=\"glyphicon glyphicon-th-list toggle-span\" data-toggle=\"collapse\"\r\n                                    data-target=\"#demo\"></span>\r\n                                <div id=\"demo\" className=\"collapse show\">\r\n                                    <div className=\"filter-heading\">Filters</div>\r\n                                    <div className=\"Select-Location\">Select Location</div>\r\n                                    <select className=\"Rectangle-2236\" onChange={this.handleLocationChange}>\r\n                                        <option>Select</option>\r\n                                        {locationList.map((item) => {\r\n                                            return <option value={`${item.location_id}-${item.city_id}`}>{`${item.name}, ${item.city}`}</option>\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"Cuisine\">Cuisine</div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" value=\"1\" onChange={() => this.handleCuisineChange(1)} />\r\n                                        <span className=\"checkbox-items\">North Indian</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(2)} />\r\n                                        <span className=\"checkbox-items\">South Indian</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(3)} />\r\n                                        <span className=\"checkbox-items\">Chineese</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(4)} />\r\n                                        <span className=\"checkbox-items\">Fast Food</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" onChange={() => this.handleCuisineChange(5)} />\r\n                                        <span className=\"checkbox-items\">Street Food</span>\r\n                                    </div>\r\n                                    <div className=\"Cuisine\">Cost For Two</div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 500)} />\r\n                                        <span className=\"checkbox-items\">Less than &#8377; 500</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(500, 1000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 500 to &#8377; 1000</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1000, 1500)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 1000 to &#8377; 1500</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1500, 2000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 1500 to &#8377; 2000</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(2000, 10000)} />\r\n                                        <span className=\"checkbox-items\">&#8377; 2000 +</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"cost\" onChange={() => this.handleCostChange(1, 10000)} />\r\n                                        <span className=\"checkbox-items\">All</span>\r\n                                    </div>\r\n                                    <div className=\"Cuisine\">Sort</div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"sort\" checked={sort == 1} onChange={() => this.onSortChange(1)} />\r\n                                        <span className=\"checkbox-items\">Price low to high</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"radio\" name=\"sort\" checked={sort == -1} onChange={() => this.onSortChange(-1)} />\r\n                                        <span className=\"checkbox-items\">Price high to low</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"col-sm-9 col-md-9 col-lg-9 scroll\">\r\n                                {restaurantList.length > 0 ? restaurantList.map((item) => {\r\n                                    return <div className=\"Item\" onClick={() => this.handleClick(item._id)}>\r\n                                        <div className=\"row pl-1\">\r\n                                            <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                                                <img className=\"img\" src={require('../images/breakfast.jpg')} />\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n                                                <div className=\"rest-name\">{item.name}</div>\r\n                                                <div className=\"res-location\">{item.locality}</div>\r\n                                                <div className=\"rest-address\">{item.city}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row padding-left\">\r\n                                            <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                                                {/* <div className=\"rest-address\">CUISINES : {item.cuisine.map((item) => item.name + ', ')}</div>\r\n                                                <div className=\"rest-address\">COST FOR TWO : {item.min_price} </div> */}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }) : <div className=\"noData\"> No Data Found</div>}\r\n                            </div>\r\n                            {pageCount.length >= 1 && <div className=\"pagination\">\r\n                                <a href=\"#\">&laquo;</a>\r\n                                {pageCount.map((item) => {\r\n                                    return < a href=\"#\">{item}</a>\r\n                                })}\r\n                                <a href=\"#\">&raquo;</a>\r\n                            </div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter3;\r\n\r\n\r\n","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Details2.js",["170","171","172","173","174","175"],"C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\Pay.js",["176"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nclass Pay extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n          name: '',\r\n          phone: '',\r\n          email:'',\r\n          amount: ''\r\n    }\r\n}\r\n\r\nhandlePayChange = () => {\r\n   \r\n    const { name,phone,email,amount } = this.state;\r\n\r\n    // making the input object for filter API basis changed location\r\n    const payObj = {\r\n        name: name,\r\n        phone: phone,\r\n        email:email,\r\n        amount: amount\r\n        \r\n    }\r\n\r\n    // axios({\r\n    //     method: 'POST',\r\n    //     url: 'http://localhost:4000/paynow',\r\n    //     headers: { 'Content-Type': 'application/json' },\r\n    //     data: payObj\r\n    // })\r\n    //     .then(response => console.log(response))\r\n    //     .catch(err => console.log(err))\r\n    fetch(`http://localhost:4000/paynow`,{\r\n        method:'POST',  \r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payObj)\r\n    }).then(response => response.json()).catch(err => console.log(err))\r\n       // e.preventDefault();\r\n}\r\n\r\n    handleChange = (event, state) => {\r\n        this.setState({ [state]: event.target.value });\r\n    }\r\n    render() {\r\n        const { name,email, phone,amount} = this.state;\r\n    \r\n        return <React.Fragment>\r\n            <div className=\"row my-5\">\r\n                <div className=\"col-md-4 offset-md-4\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <form className=\"\" action=\"http://localhost:4000/paynow\" method=\"post\">\r\n                            {/* <form> */}\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"\">Name: </label>\r\n                                   \r\n                                    <input className=\"form-control\" type=\"text\" value={name} onChange={(event) => this.handleChange(event, 'name')} />\r\n                                </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"\">Email: </label>\r\n                                        \r\n                                        <input className=\"form-control\" type=\"text\" value={email} onChange={(event) => this.handleChange(event, 'email')} />\r\n                                </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"\">Phone: </label>\r\n                                            <input className=\"form-control\" type=\"text\" value={phone} onChange={(event) => this.handleChange(event, 'phone')} />\r\n                                         \r\n                                </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label for=\"\">Amount: </label>\r\n                                                <input className=\"form-control\" type=\"text\" value={amount} onChange={(event) => this.handleChange(event, 'amount')} />\r\n                                       \r\n                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    {/* <button className=\"btn form-control btn-primary\" name=\"submit\" onSubmit={this.handlePayChange}>Pay Now</button> */}\r\n                                                    <input type=\"submit\" className=\"btn btn-danger\"  value=\"Submit\" />\r\n                                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    </div>\r\n                \r\n    </React.Fragment>\r\n\r\n    }\r\n}\r\nexport default Pay;\r\n","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\MyOrders.js",["177"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nimport SubHeaher from '../Components/SubHeaher';\r\n\r\nclass MyOrders extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            Orderitems:[]\r\n        }\r\n    }\r\n   \r\n    componentDidMount(){\r\n        const { Orderitems } = this.state;\r\n       // console.log(restaurantId);\r\n        axios({\r\n            method: 'GET',\r\n            url: `http://localhost:8901/getorders`,\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res => this.setState({ Orderitems: res.data.ordersresult }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    // getOrder = () => {\r\n        \r\n    // }\r\n\r\n\r\n    render() {\r\n        const { Orderitems} = this.state;\r\n   \r\n        return (\r\n           <React.Fragment>\r\n               <SubHeaher />\r\n               <h2>Orders placed</h2>\r\n            <div className=\"container-fluid\">\r\n               <table className=\"table table-hover tm-table-small tm-product-table\">\r\n               <thead>\r\n                <tr>\r\n                        \r\n                        {/* <th scope=\"col\">TXNID</th>\r\n                        <th scope=\"col\">BANKTXNID</th> */}\r\n                        \r\n                        <th scope=\"col\">CUST ID</th>\r\n                        <th scope=\"col\">EMAIL</th>\r\n                        <th scope=\"col\">MOBILE NO</th>\r\n                        <th scope=\"col\">ORDERID</th>\r\n                        <th scope=\"col\">TXNAMOUNT</th>\r\n                        <th scope=\"col\">STATUS</th>\r\n                        <th scope=\"col\">TXNTYPE</th>\r\n                        <th scope=\"col\">GATEWAYNAME</th>\r\n                        {/* <th scope=\"col\">RESPCODE</th> */}\r\n                        <th scope=\"col\">RESPMSG</th>\r\n                        <th scope=\"col\">BANKNAME</th>\r\n                        {/* <th scope=\"col\">MID</th> */}\r\n                        <th scope=\"col\">PAYMENTMODE</th>\r\n                        <th scope=\"col\">REFUNDAMT</th>\r\n                        <th scope=\"col\">TXNDATE</th>\r\n                        <th scope=\"col\">WEBSITE</th>\r\n                        <th scope=\"col\">CHANNEL ID</th>\r\n                        <th scope=\"col\">INDUSTRY TYPE ID</th>\r\n                        \r\n\r\n                        \r\n                        \r\n                </tr>\r\n               </thead>\r\n               <tbody>\r\n               {Orderitems.map((item, index) => {\r\n                   return(\r\n                    <tr key={index}>\r\n                                \r\n                  \r\n                    {/* <td>{item.TXNID}</td>\r\n                   <td>{item.BANKTXNID}</td>      */}\r\n\r\n                   \r\n                   <td >{item.CUST_ID}</td>\r\n                   <td >{item.EMAIL}</td>\r\n                   <td >{item.MOBILE_NO}</td>\r\n                   <td >{item.ORDERID}</td>\r\n                   <td >{item.TXNAMOUNT}</td>  \r\n                   <td >{item.STATUS}</td>  \r\n                   <td >{item.TXNTYPE}</td>  \r\n                   <td >{item.GATEWAYNAME}</td>  \r\n                   {/* <td >{item.RESPCODE}</td>   */}\r\n                   <td >{item.RESPMSG}</td>  \r\n                   <td >{item.BANKNAME}</td>                         \r\n                   {/* <td >{item.MID}</td>   */}\r\n                   <td>{item.PAYMENTMODE}</td>  \r\n                   <td >{item.REFUNDAMT}</td>  \r\n                   <td >{item.TXNDATE}</td>  \r\n                   <td >{item.WEBSITE}</td>  \r\n                   <td >{item.CHANNEL_ID}</td>  \r\n                   <td >{item.INDUSTRY_TYPE_ID}</td>  \r\n               </tr>\r\n                   );\r\n               })}\r\n               </tbody>\r\n               </table>\r\n            </div>\r\n               \r\n            \r\n                            \r\n           \r\n        \r\n           </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyOrders;\r\n","C:\\Prince\\React\\GlobalReact\\myreactapp\\src\\Components\\SubHeaher.js",[],"C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\index.js",[],"C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\Router.js",["178"],"C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\Home.js",[],"C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\Filter.js",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194"],"C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\Header.js",["195"],"C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\Details.js",["196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212"],"C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\MyOrders.js",["213"],"C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\Wallpaper.js",[],"C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\QuickSearch.js",[],"C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\SubHeaher.js",[],"C:\\Prince\\Edureka\\Assignments\\ZomatoClone\\src\\Components\\QuickSearchItem.js",["214"],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"215","replacedBy":"219"},{"ruleId":"217","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":14},{"ruleId":"221","severity":1,"message":"225","line":16,"column":8,"nodeType":"223","messageId":"224","endLine":16,"endColumn":11},{"ruleId":"226","severity":1,"message":"227","line":140,"column":27,"nodeType":"228","messageId":"229","endLine":140,"endColumn":29},{"ruleId":"230","severity":1,"message":"231","line":147,"column":26,"nodeType":"232","messageId":"233","endLine":147,"endColumn":28},{"ruleId":"221","severity":1,"message":"234","line":168,"column":19,"nodeType":"223","messageId":"224","endLine":168,"endColumn":22},{"ruleId":"221","severity":1,"message":"235","line":246,"column":17,"nodeType":"223","messageId":"224","endLine":246,"endColumn":25},{"ruleId":"221","severity":1,"message":"236","line":282,"column":80,"nodeType":"223","messageId":"224","endLine":282,"endColumn":84},{"ruleId":"221","severity":1,"message":"237","line":282,"column":86,"nodeType":"223","messageId":"224","endLine":282,"endColumn":91},{"ruleId":"221","severity":1,"message":"238","line":282,"column":93,"nodeType":"223","messageId":"224","endLine":282,"endColumn":98},{"ruleId":"221","severity":1,"message":"239","line":282,"column":100,"nodeType":"223","messageId":"224","endLine":282,"endColumn":106},{"ruleId":"221","severity":1,"message":"240","line":282,"column":108,"nodeType":"223","messageId":"224","endLine":282,"endColumn":115},{"ruleId":"221","severity":1,"message":"241","line":282,"column":117,"nodeType":"223","messageId":"224","endLine":282,"endColumn":130},{"ruleId":"242","severity":1,"message":"243","line":297,"column":41,"nodeType":"244","endLine":297,"endColumn":120},{"ruleId":"245","severity":1,"message":"246","line":351,"column":49,"nodeType":"244","endLine":351,"endColumn":118},{"ruleId":"226","severity":1,"message":"227","line":372,"column":71,"nodeType":"228","messageId":"229","endLine":372,"endColumn":73},{"ruleId":"247","severity":1,"message":"248","line":451,"column":45,"nodeType":"244","endLine":451,"endColumn":82},{"ruleId":"247","severity":1,"message":"248","line":455,"column":45,"nodeType":"244","endLine":455,"endColumn":79},{"ruleId":"247","severity":1,"message":"248","line":459,"column":45,"nodeType":"244","endLine":459,"endColumn":69},{"ruleId":"247","severity":1,"message":"248","line":463,"column":45,"nodeType":"244","endLine":463,"endColumn":75},{"ruleId":"249","severity":1,"message":"250","line":21,"column":13,"nodeType":"251","messageId":"229","endLine":21,"endColumn":24},{"ruleId":"221","severity":1,"message":"252","line":137,"column":15,"nodeType":"223","messageId":"224","endLine":137,"endColumn":19},{"ruleId":"226","severity":1,"message":"253","line":144,"column":40,"nodeType":"228","messageId":"229","endLine":144,"endColumn":42},{"ruleId":"226","severity":1,"message":"253","line":175,"column":40,"nodeType":"228","messageId":"229","endLine":175,"endColumn":42},{"ruleId":"226","severity":1,"message":"227","line":201,"column":40,"nodeType":"228","messageId":"229","endLine":201,"endColumn":42},{"ruleId":"226","severity":1,"message":"253","line":213,"column":40,"nodeType":"228","messageId":"229","endLine":213,"endColumn":42},{"ruleId":"226","severity":1,"message":"253","line":243,"column":40,"nodeType":"228","messageId":"229","endLine":243,"endColumn":42},{"ruleId":"226","severity":1,"message":"253","line":273,"column":40,"nodeType":"228","messageId":"229","endLine":273,"endColumn":42},{"ruleId":"221","severity":1,"message":"254","line":299,"column":61,"nodeType":"223","messageId":"224","endLine":299,"endColumn":66},{"ruleId":"221","severity":1,"message":"255","line":299,"column":67,"nodeType":"223","messageId":"224","endLine":299,"endColumn":75},{"ruleId":"226","severity":1,"message":"227","line":370,"column":87,"nodeType":"228","messageId":"229","endLine":370,"endColumn":89},{"ruleId":"226","severity":1,"message":"227","line":374,"column":87,"nodeType":"228","messageId":"229","endLine":374,"endColumn":89},{"ruleId":"226","severity":1,"message":"227","line":417,"column":49,"nodeType":"228","messageId":"229","endLine":417,"endColumn":51},{"ruleId":"245","severity":1,"message":"256","line":419,"column":37,"nodeType":"244","endLine":419,"endColumn":41},{"ruleId":"245","severity":1,"message":"256","line":421,"column":48,"nodeType":"244","endLine":421,"endColumn":95},{"ruleId":"245","severity":1,"message":"256","line":423,"column":37,"nodeType":"244","endLine":423,"endColumn":40},{"ruleId":"221","severity":1,"message":"257","line":16,"column":15,"nodeType":"223","messageId":"224","endLine":16,"endColumn":25},{"ruleId":"226","severity":1,"message":"227","line":76,"column":43,"nodeType":"228","messageId":"229","endLine":76,"endColumn":45},{"ruleId":"221","severity":1,"message":"258","line":3,"column":8,"nodeType":"223","messageId":"224","endLine":3,"endColumn":12},{"ruleId":"221","severity":1,"message":"252","line":140,"column":15,"nodeType":"223","messageId":"224","endLine":140,"endColumn":19},{"ruleId":"226","severity":1,"message":"253","line":147,"column":40,"nodeType":"228","messageId":"229","endLine":147,"endColumn":42},{"ruleId":"226","severity":1,"message":"253","line":178,"column":40,"nodeType":"228","messageId":"229","endLine":178,"endColumn":42},{"ruleId":"226","severity":1,"message":"227","line":205,"column":40,"nodeType":"228","messageId":"229","endLine":205,"endColumn":42},{"ruleId":"226","severity":1,"message":"253","line":217,"column":40,"nodeType":"228","messageId":"229","endLine":217,"endColumn":42},{"ruleId":"226","severity":1,"message":"253","line":247,"column":40,"nodeType":"228","messageId":"229","endLine":247,"endColumn":42},{"ruleId":"226","severity":1,"message":"253","line":277,"column":40,"nodeType":"228","messageId":"229","endLine":277,"endColumn":42},{"ruleId":"226","severity":1,"message":"227","line":461,"column":87,"nodeType":"228","messageId":"229","endLine":461,"endColumn":89},{"ruleId":"226","severity":1,"message":"227","line":465,"column":87,"nodeType":"228","messageId":"229","endLine":465,"endColumn":89},{"ruleId":"247","severity":1,"message":"248","line":477,"column":49,"nodeType":"244","endLine":477,"endColumn":113},{"ruleId":"245","severity":1,"message":"246","line":496,"column":33,"nodeType":"244","endLine":496,"endColumn":45},{"ruleId":"245","severity":1,"message":"246","line":498,"column":44,"nodeType":"244","endLine":498,"endColumn":57},{"ruleId":"245","severity":1,"message":"246","line":500,"column":33,"nodeType":"244","endLine":500,"endColumn":45},{"ruleId":"226","severity":1,"message":"227","line":150,"column":27,"nodeType":"228","messageId":"229","endLine":150,"endColumn":29},{"ruleId":"230","severity":1,"message":"231","line":156,"column":26,"nodeType":"232","messageId":"233","endLine":156,"endColumn":28},{"ruleId":"247","severity":1,"message":"248","line":177,"column":50,"nodeType":"244","endLine":177,"endColumn":128},{"ruleId":"247","severity":1,"message":"248","line":226,"column":45,"nodeType":"244","endLine":226,"endColumn":63},{"ruleId":"247","severity":1,"message":"248","line":250,"column":103,"nodeType":"244","endLine":250,"endColumn":182},{"ruleId":"226","severity":1,"message":"227","line":251,"column":63,"nodeType":"228","messageId":"229","endLine":251,"endColumn":65},{"ruleId":"221","severity":1,"message":"259","line":2,"column":8,"nodeType":"223","messageId":"224","endLine":2,"endColumn":13},{"ruleId":"221","severity":1,"message":"260","line":16,"column":17,"nodeType":"223","messageId":"224","endLine":16,"endColumn":27},{"ruleId":"221","severity":1,"message":"222","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":14},{"ruleId":"249","severity":1,"message":"250","line":21,"column":13,"nodeType":"251","messageId":"229","endLine":21,"endColumn":24},{"ruleId":"221","severity":1,"message":"252","line":137,"column":15,"nodeType":"223","messageId":"224","endLine":137,"endColumn":19},{"ruleId":"226","severity":1,"message":"253","line":144,"column":40,"nodeType":"228","messageId":"229","endLine":144,"endColumn":42},{"ruleId":"226","severity":1,"message":"253","line":175,"column":40,"nodeType":"228","messageId":"229","endLine":175,"endColumn":42},{"ruleId":"226","severity":1,"message":"227","line":201,"column":40,"nodeType":"228","messageId":"229","endLine":201,"endColumn":42},{"ruleId":"226","severity":1,"message":"253","line":213,"column":40,"nodeType":"228","messageId":"229","endLine":213,"endColumn":42},{"ruleId":"226","severity":1,"message":"253","line":243,"column":40,"nodeType":"228","messageId":"229","endLine":243,"endColumn":42},{"ruleId":"226","severity":1,"message":"253","line":273,"column":40,"nodeType":"228","messageId":"229","endLine":273,"endColumn":42},{"ruleId":"221","severity":1,"message":"254","line":299,"column":61,"nodeType":"223","messageId":"224","endLine":299,"endColumn":66},{"ruleId":"221","severity":1,"message":"255","line":299,"column":67,"nodeType":"223","messageId":"224","endLine":299,"endColumn":75},{"ruleId":"226","severity":1,"message":"227","line":370,"column":87,"nodeType":"228","messageId":"229","endLine":370,"endColumn":89},{"ruleId":"226","severity":1,"message":"227","line":374,"column":87,"nodeType":"228","messageId":"229","endLine":374,"endColumn":89},{"ruleId":"226","severity":1,"message":"227","line":417,"column":49,"nodeType":"228","messageId":"229","endLine":417,"endColumn":51},{"ruleId":"245","severity":1,"message":"256","line":419,"column":37,"nodeType":"244","endLine":419,"endColumn":41},{"ruleId":"245","severity":1,"message":"256","line":421,"column":48,"nodeType":"244","endLine":421,"endColumn":95},{"ruleId":"245","severity":1,"message":"256","line":423,"column":37,"nodeType":"244","endLine":423,"endColumn":40},{"ruleId":"226","severity":1,"message":"227","line":76,"column":43,"nodeType":"228","messageId":"229","endLine":76,"endColumn":45},{"ruleId":"226","severity":1,"message":"227","line":140,"column":27,"nodeType":"228","messageId":"229","endLine":140,"endColumn":29},{"ruleId":"230","severity":1,"message":"231","line":147,"column":26,"nodeType":"232","messageId":"233","endLine":147,"endColumn":28},{"ruleId":"221","severity":1,"message":"234","line":168,"column":19,"nodeType":"223","messageId":"224","endLine":168,"endColumn":22},{"ruleId":"221","severity":1,"message":"235","line":246,"column":17,"nodeType":"223","messageId":"224","endLine":246,"endColumn":25},{"ruleId":"221","severity":1,"message":"236","line":282,"column":80,"nodeType":"223","messageId":"224","endLine":282,"endColumn":84},{"ruleId":"221","severity":1,"message":"237","line":282,"column":86,"nodeType":"223","messageId":"224","endLine":282,"endColumn":91},{"ruleId":"221","severity":1,"message":"238","line":282,"column":93,"nodeType":"223","messageId":"224","endLine":282,"endColumn":98},{"ruleId":"221","severity":1,"message":"239","line":282,"column":100,"nodeType":"223","messageId":"224","endLine":282,"endColumn":106},{"ruleId":"221","severity":1,"message":"240","line":282,"column":108,"nodeType":"223","messageId":"224","endLine":282,"endColumn":115},{"ruleId":"221","severity":1,"message":"241","line":282,"column":117,"nodeType":"223","messageId":"224","endLine":282,"endColumn":130},{"ruleId":"242","severity":1,"message":"243","line":297,"column":41,"nodeType":"244","endLine":297,"endColumn":120},{"ruleId":"245","severity":1,"message":"246","line":351,"column":49,"nodeType":"244","endLine":351,"endColumn":118},{"ruleId":"226","severity":1,"message":"227","line":372,"column":71,"nodeType":"228","messageId":"229","endLine":372,"endColumn":73},{"ruleId":"247","severity":1,"message":"248","line":451,"column":45,"nodeType":"244","endLine":451,"endColumn":82},{"ruleId":"247","severity":1,"message":"248","line":455,"column":45,"nodeType":"244","endLine":455,"endColumn":79},{"ruleId":"247","severity":1,"message":"248","line":459,"column":45,"nodeType":"244","endLine":459,"endColumn":69},{"ruleId":"247","severity":1,"message":"248","line":463,"column":45,"nodeType":"244","endLine":463,"endColumn":75},{"ruleId":"221","severity":1,"message":"260","line":16,"column":17,"nodeType":"223","messageId":"224","endLine":16,"endColumn":27},{"ruleId":"221","severity":1,"message":"257","line":16,"column":15,"nodeType":"223","messageId":"224","endLine":16,"endColumn":25},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],["261"],["262"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Pay' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'obj' is assigned a value but never used.","'subTotal' is assigned a value but never used.","'name' is assigned a value but never used.","'phone' is assigned a value but never used.","'email' is assigned a value but never used.","'amount' is assigned a value but never used.","'address' is assigned a value but never used.","'contactNumber' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-dupe-keys","Duplicate key 'restaurants'.","ObjectExpression","'city' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'image' is assigned a value but never used.","'location' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'locationID' is assigned a value but never used.","'Img1' is defined but never used.","'axios' is defined but never used.","'Orderitems' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]